{"version":3,"sources":["Styles/GlobalStyles.js","Styles/Theme.js","Components/Input.js","Components/Button/Button.js","Routes/Auth/AuthPresenter.js","Hooks/useInput.js","Routes/Auth/AuthQueries.js","Routes/Auth/index.js","Routes/Auth/AuthContainer.js","Components/Bulletin/BulletinQueries.js","Components/Icons.js","Components/Loader.js","Components/FatText.js","Components/Avatar.js","Components/Bulletin/BulletinPresenter.js","SharedQueries.js","Components/Bulletin/BulletinContainer.js","Components/Bulletin/index.js","Components/Bulletin/BulletinBridge.js","Components/Button/DropdownButton.js","Components/Participants.js","Components/Button/DisabledButton.js","Components/Meeting/MeetingPresenter.js","Components/Meeting/MeetingQueries.js","Components/Meeting/index.js","Components/Meeting/MeetingContainer.js","Routes/Main.js","Components/BulletinLine.js","Components/BulletinList/BulletinListPresenter.js","Components/BulletinList/index.js","Components/BulletinList/BulletinListContainer.js","Components/semi-component/toggle.js","Components/Textarea.js","Components/EditPost/EditPostPresenter.js","Components/EditPost/EditPostQueries.js","utils/dropdownOptions.js","Components/EditPost/index.js","Components/EditPost/EditPostContainer.js","Routes/Bulletin.js","Components/CommentLine.js","Components/MeetingLine.js","Components/EditProfile/EditProfilePresenter.js","Components/EditProfile/EditProfileQueries.js","Components/EditProfile/index.js","Components/EditProfile/EditProfileContainer.js","Routes/Profile/ProfilePresenter.js","Routes/Profile/ProfileQueries.js","Routes/Profile/index.js","Routes/Profile/ProfileContainer.js","Routes/Book.js","Components/EditMeeting/EditMeetingPresenter.js","Components/EditMeeting/EditMeetingQueries.js","Components/EditMeeting/index.js","Components/EditMeeting/EditMeetingContainer.js","Routes/Meeting.js","Components/Header.js","Components/Router.js","Components/App.js","Apollo/LocalState.js","Apollo/Client.js","index.js"],"names":["createGlobalStyle","reset","props","theme","ligthGray5","blackColor","blueColor","maxWidth","lightGray1","lightGray2","lightGray3","lightGray4","lightGray5","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","whiteBox","borderTopBottom","InputType","styled","input","Input","placeholder","className","value","onChange","type","disabled","Container","button","Button","text","onClick","Wrapper","div","Box","Form","StateChanger","setAction","action","email","password","userName","phoneNum","birthday","introduce","onSubmit","defaultValue","useState","setValue","e","target","LOG_IN","gql","CREATE_USER","LOCAL_LOG_IN","AuthContainer","useInput","useMutation","variables","loginMutation","classes","createUserMutation","localLogInMutation","AuthPresenter","a","async","preventDefault","token","data","login","undefined","console","log","toast","error","success","setTimeout","SEE_POST","TOGGLE_POST","TOGGLE_LIKE","ADD_COMMENT","Logo","xmlns","width","height","viewBox","d","HeartFull","fill","HeartEmpty","ViewIcon","Comment","DropdownArrow","X","Animation","keyframes","Loader","size","Text","span","FatText","number","getSize","url","Avatar","BulletinContainer2","Header","header","UserColumn","Classes","TitleContainer","Title","Main","Files","File","Metas","Meta","MetaText","TimeStamp","Textarea","TextareaAutoSize","Comments","ul","li","id","files","author","title","classifyNum","main","announcement","caption","isLiked","likesCount","viewsCount","commentsCount","comments","views","likes","createdAt","toggleLike","onKeyPress","newComment","avatar","to","map","file","key","src","comment","user","ME","BulletinContainer","isViewed","postId","toggleLikeMutation","isLikedS","setIsLiked","likeCountS","setLikeCount","addCommentMutation","BulletinPresenter","substring","createdAtParsed","event","which","BulletinBridge","useQuery","loading","seePost","DropdownButton","participantsCount","SEE_PARTICIPANTS_LIST","Participant","Participants","meetingId","seeParticipantsList","participant","MeetingContainer","User","MainContainer","MeetingTime","MeetingPlace","MeetingPrice","Deadline","MeetingHeadCounts","ButtonContainer","meetingTime","meetingPlace","meetingPrice","deadline","meetingHeadCounts","participants","isParticipated","dropdown","clickDrop","participate","userId","setEditing","DisabledButton","PARTICIPATE","setEditId","setDropdown","participateMutation","MeetingPresenter","paritcipate","MAIN_POST","MAIN_MEETING","PostWrapper","grayColor1","MeetingWrapper","dataPost","loadingPost","dataMeeting","loadingMeeting","mainMeeting","mainPost","border","ContainerDivider","ViewContainer","HeartContainer","View","Like","BulletinLine","post","openBulletin","String","TabContainer","Tabs","posts","BulletinListPresenter","CheckboxToggle","checked","Checkbox","toggle","defaultChecked","TextareaType","textarea","XButtonContainer","XButton","SpinnerContainer","DropdownM","Dropdown","CheckboxToggleM","CaptionContainer","Caption","SubmitButton","titleEdit","captionEdit","defaultOption","options","clickCheck","clickAnnounce","mainCheck","announceCheck","setEdit","deletePost","EDIT_POST","WRITE_POST","classifyOptions","EditPostContainer","refetch","setMainCheck","setAnnounceCheck","indexOf","writeMutation","editMutation","deleteMutation","upload","editPost","EditPostPresenter","editDefaultOption","SEE_FULL_BULLETIN_LIST","BulletinListContainer","ButtonDownContainer","withRouter","match","params","edit","editId","seeFullBulletinList","bulletinList","BulletinList","sort","b","EditPost","CommentLine","MeetingLine","meeting","passwordEdit","userNameEdit","phoneNumEdit","birthdayEdit","introduceEdit","EDIT_PROFILE","GET_USER","editProfileContainer","editProfile","logOut","editAccountMutation","seeProfileById","EditProfilePresenter","HeaderColumn","UsernameRow","UserName","ProfileButton","ProfileContainer","ProfileInfo","Counts","Count","Tab","ContentContainer","editAction","seeProfile","postsCount","reservations","reservationsCount","isSelf","Helmet","EditProfile","LOG_OUT","logUserOut","setEditAction","ProfilePresenter","AllContainer","Content","deleteMeeting","SEE_MEETING","EDIT_MEETING","WRITE_MEETING","EditMeetingContainer","meetingTimeEdit","meetingPlaceEdit","meetingPriceEdit","deadlineEdit","meetingHeadCountsEdit","parseInt","uploadMeeting","editMeeting","EditMeetingPresenter","seeMeeting","SHOW_MEETING_LIST","editId2","showMeetingList","EditMeeting","HeaderWrapper","HeaderLink","Link","me","LoggedInRoutes","exact","path","component","Bulletin","Book","Meeting","Profile","from","LoggedOutRoutes","Auth","AppRouter","isLoggedIn","QUERY","defaults","Boolean","localStorage","getItem","resolvers","Mutation","logUserIn","_","cache","setItem","writeData","__","removeItem","window","location","ApolloClient","uri","clientState","headers","Authorization","ReactDOM","render","client","Client","Theme","GlobalStyles","position","POSITION","BOTTOM_LEFT","document","getElementById"],"mappings":"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","file":"static/js/main.019689d9.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nexport default createGlobalStyle`\r\n    ${reset};\r\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700');\r\n\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        background-color:${props=> props.theme.ligthGray5};\r\n        color:${props=> props.theme.blackColor};\r\n        font-size:14pt;\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\r\n    }\r\n    a {\r\n        color:${props => props.theme.blueColor};\r\n        text-decoration:none;\r\n    }\r\n    input:focus{\r\n        outline:none;\r\n    }\r\n`;\r\n","const BOX_BORDER = \"1px solid #BFCCD6\";\r\nconst BORDER_RADIUS = \"4px\";\r\n\r\nexport default {\r\n  maxWidth: \"1000px\",\r\n  lightGray1: \"#CED9E0\",\r\n  lightGray2: \"#D8E1E8\",\r\n  lightGray3: \"#E1E8ED\",\r\n  lightGray4: \"#EBF1F5\",\r\n  lightGray5: \"#F5F8FA\",\r\n  blackColor: \"#10161A\",\r\n  darkGreyColor: \"#293742\",\r\n  lightGreyColor: \"#8A9BA8\",\r\n  redColor: \"#DB3737\",\r\n  blueColor: \"#137CBD\",\r\n  darkBlueColor: \"#0E5A8A\",\r\n  boxBorder: \"1px solid #BFCCD6\",\r\n  borderRadius: \"4px\",\r\n  whiteBox: ` border:${BOX_BORDER};\r\n                border-radius:${BORDER_RADIUS};\r\n                background-color:#E1E8ED;\r\n\r\n        `,\r\n  borderTopBottom: `border-top:2px solid #CED9E0;\r\n                        border-bottom:2px solid #CED9E0;\r\n                        margin-bottom:5px;\r\n                        `\r\n};\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputType = styled.input`\r\n  border: 0;\r\n  border: ${props => props.theme.boxBorder};\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background-color: ${props => props.theme.lightGray5};\r\n  height: 35px;\r\n  font-size: 12px;\r\n  padding: 0px 15px;\r\n`;\r\n\r\nconst Input = ({\r\n  placeholder,\r\n  className,\r\n  value,\r\n  onChange,\r\n  type = \"text\",\r\n  disabled = false\r\n}) => (\r\n  <InputType\r\n    className={className}\r\n    placeholder={placeholder}\r\n    value={value}\r\n    onChange={onChange}\r\n    type={type}\r\n    disabled={disabled}\r\n  />\r\n);\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default Input;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.button`\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  background-color: ${props => props.theme.darkBlueColor};\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button = ({ text, onClick }) => (\r\n  <Container onClick={onClick}>{text}</Container>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/Input\";\r\nimport Button from \"../../Components/Button/Button\";\r\nimport Helmet from \"react-helmet\";\r\n\r\n// string literals are supported through IconName union type\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  border-radius:0px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\n\r\nconst Form = styled(Box)`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  form {\r\n    width: 100%;\r\n    input {\r\n      width: 100%;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StateChanger = styled(Box)`\r\n  text-align: center;\r\n  padding: 20px 35px;\r\n`;\r\n\r\n// const Link = styled.span`\r\n//   color: ${props => props.theme.blueColor};\r\n//   cursor: pointer;\r\n// `;\r\n\r\nexport default ({\r\n  setAction,\r\n  action,\r\n  email,\r\n  password,\r\n  userName,\r\n  phoneNum,\r\n  birthday,\r\n  introduce,\r\n  onSubmit\r\n}) => (\r\n  <Wrapper>\r\n    <Form>\r\n      {action === \"signUp\" && (\r\n        <>\r\n          <Helmet>\r\n            <title>계정 생성 | Originals</title>\r\n          </Helmet>\r\n\r\n          <form onSubmit={onSubmit}>\r\n            <Input placeholder={\"이메일\"} {...email} type=\"email\" />\r\n            <Input placeholder={\"비밀번호\"} {...password} type=\"password\" />\r\n            <Input placeholder={\"이름\"} {...userName} />\r\n            <Input placeholder={\"전화번호\"} {...phoneNum} />\r\n            <Input placeholder={\"생일\"} {...birthday} />\r\n            <Input placeholder={\"한 줄 소개\"} {...introduce} />\r\n\r\n            <Button text=\"계정 생성\" />\r\n          </form>\r\n        </>\r\n      )}{\" \"}\r\n      {action === \"login\" && (\r\n        <>\r\n          <Helmet>\r\n            <title>로그인 | Originals</title>\r\n          </Helmet>\r\n          <form onSubmit={onSubmit}>\r\n            <Input placeholder={\"이메일\"} {...email} type=\"email\" />\r\n            <Input placeholder={\"비밀번호\"} {...password} type=\"password\" />\r\n\r\n            <Button text=\"로그인\" />\r\n          </form>\r\n        </>\r\n      )}\r\n    </Form>\r\n    <StateChanger>\r\n      {action === \"login\" ? (\r\n        <>\r\n          <Button onClick={() => setAction(\"signUp\")} text=\"계정 생성\" />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Button onClick={() => setAction(\"login\")} text=\"로그인\" />\r\n        </>\r\n      )}\r\n    </StateChanger>\r\n  </Wrapper>\r\n);\r\n","import { useState } from \"react\";\r\n\r\nexport default defaultValue => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setValue(value);\r\n  };\r\n\r\n  return { value, onChange, setValue };\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const LOG_IN = gql`\r\n  query login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser(\r\n    $email: String!\r\n    $password: String!\r\n    $userName: String!\r\n    $phoneNum: String!\r\n    $birthday: String!\r\n    $introduce: String\r\n    $classes: Int\r\n  ) {\r\n    createUser(\r\n      email: $email\r\n      password: $password\r\n      userName: $userName\r\n      phoneNum: $phoneNum\r\n      birthday: $birthday\r\n      introduce: $introduce\r\n      classes: $classes\r\n    )\r\n  }\r\n`;\r\n\r\nexport const LOCAL_LOG_IN = gql`\r\n  mutation logUserIn($token: String!) {\r\n    logUserIn(token: $token) @client\r\n  }\r\n`;\r\n","import AuthContainer from \"./AuthContainer\"\r\n\r\nexport default AuthContainer;\r\n","import React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { LOG_IN, CREATE_USER, LOCAL_LOG_IN } from \"./AuthQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default () => {\r\n  const [action, setAction] = useState(\"login\");\r\n\r\n  const email = useInput(\"\");\r\n  const password = useInput(\"\");\r\n  const userName = useInput(\"\");\r\n  const phoneNum = useInput(\"\");\r\n  const birthday = useInput(\"\");\r\n  const introduce = useInput(\"\");\r\n\r\n  const [loginMutation] = useMutation(LOG_IN, {\r\n    variables: { email: email.value, password: password.value }\r\n  });\r\n\r\n  const [createUserMutation] = useMutation(CREATE_USER, {\r\n    variables: {\r\n      email: email.value,\r\n      password: password.value,\r\n      userName: userName.value,\r\n      phoneNum: phoneNum.value,\r\n      birthday: birthday.value,\r\n      introduce: introduce.value,\r\n      classes: 1\r\n    }\r\n  });\r\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (action === \"login\") {\r\n      if (email.value !== \"\") {\r\n        if (password.value !== \"\") {\r\n          try {\r\n            const {\r\n              data: { login: token }\r\n            } = await loginMutation();\r\n            if (token !== \"\" && token !== undefined) {\r\n              localLogInMutation({ variables: { token } });\r\n            }\r\n            console.log(token);\r\n          } catch {\r\n            toast.error(\"비밀번호가 틀렸습니다.\");\r\n          }\r\n        } else {\r\n          toast.error(\"비밀번호를 입력해주세요.\");\r\n        }\r\n      } else {\r\n        toast.error(\"이메일을 입력해주세요.\");\r\n      }\r\n    } else if (action === \"signUp\") {\r\n      // TODO\r\n      if (\r\n        email.value !== \"\" &&\r\n        userName.value !== \"\" &&\r\n        password.value !== \"\" &&\r\n        birthday.value !== \"\" &&\r\n        phoneNum.value !== \"\" &&\r\n        introduce.value !== \"\"\r\n      ) {\r\n        try {\r\n          const createUser = await createUserMutation();\r\n          if (!createUser) {\r\n            toast.error(\"계정을 생성할 수 없습니다. 다시 시도해주세요.\");\r\n          } else {\r\n            toast.success(\"계정이 생성되었습니다! 로그인 해주세요.\");\r\n            setTimeout(() => setAction(\"login\"), 3000);\r\n          }\r\n        } catch (e) {\r\n          toast.error(\"계정을 생성할 수 없습니다. 다시 시도해주세요.\");\r\n        }\r\n      } else {\r\n        toast.error(\"모든 칸을 다 채워주세요.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthPresenter\r\n      setAction={setAction}\r\n      action={action}\r\n      userName={userName}\r\n      email={email}\r\n      password={password}\r\n      phoneNum={phoneNum}\r\n      birthday={birthday}\r\n      introduce={introduce}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const SEE_POST = gql`\r\n  query seePost($id: String!) {\r\n    seePost(id: $id) {\r\n      id\r\n      files {\r\n        id\r\n        url\r\n      }\r\n      author {\r\n        id\r\n        avatar\r\n        userName\r\n        classes\r\n        email\r\n      }\r\n      classifyNum\r\n      main\r\n      announcement\r\n      title\r\n      caption\r\n      isLiked\r\n      isViewed\r\n      viewsCount\r\n      likesCount\r\n      commentsCount\r\n      views {\r\n        id\r\n      }\r\n      likes {\r\n        id\r\n      }\r\n      comments {\r\n        id\r\n        user {\r\n          id\r\n          userName\r\n          avatar\r\n          email\r\n        }\r\n        text\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOGGLE_POST = gql`\r\n  mutation togglePost($postId: String!) {\r\n    togglePost(postId: $postId)\r\n  }\r\n`;\r\n\r\nexport const TOGGLE_LIKE = gql`\r\n  mutation toggleLike($postId: String!) {\r\n    toggleLike(postId: $postId)\r\n  }\r\n`;\r\n\r\nexport const ADD_COMMENT = gql`\r\n  mutation addComment($postId: String!, $text: String!) {\r\n    addComment(postId: $postId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nexport const Profile = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 2c2.757 0 5 2.243 5 5.001 0 2.756-2.243 5-5 5s-5-2.244-5-5c0-2.758 2.243-5.001 5-5.001zm0-2c-3.866 0-7 3.134-7 7.001 0 3.865 3.134 7 7 7s7-3.135 7-7c0-3.867-3.134-7.001-7-7.001zm6.369 13.353c-.497.498-1.057.931-1.658 1.302 2.872 1.874 4.378 5.083 4.972 7.346h-19.387c.572-2.29 2.058-5.503 4.973-7.358-.603-.374-1.162-.811-1.658-1.312-4.258 3.072-5.611 8.506-5.611 10.669h24c0-2.142-1.44-7.557-5.631-10.647z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Meeting = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M17.997 18h-.998c0-1.552.06-1.775-.88-1.993-1.438-.332-2.797-.645-3.293-1.729-.18-.396-.301-1.048.155-1.907 1.021-1.929 1.277-3.583.702-4.538-.672-1.115-2.707-1.12-3.385.017-.576.968-.316 2.613.713 4.512.465.856.348 1.51.168 1.908-.49 1.089-1.836 1.4-3.262 1.728-.982.227-.92.435-.92 2.002h-.995l-.002-.623c0-1.259.1-1.985 1.588-2.329 1.682-.389 3.344-.736 2.545-2.209-2.366-4.365-.676-6.839 1.865-6.839 2.492 0 4.227 2.383 1.867 6.839-.775 1.464.824 1.812 2.545 2.209 1.49.344 1.589 1.072 1.589 2.333l-.002.619zm4.81-2.214c-1.289-.298-2.489-.559-1.908-1.657 1.77-3.342.47-5.129-1.4-5.129-1.265 0-2.248.817-2.248 2.325 0 1.269.574 2.175.904 2.925h1.048c-.17-.75-1.466-2.562-.766-3.736.412-.692 1.704-.693 2.114-.012.38.631.181 1.812-.534 3.161-.388.733-.28 1.301-.121 1.648.305.666.977.987 1.737 1.208 1.507.441 1.368.042 1.368 1.48h.997l.002-.463c0-.945-.074-1.492-1.193-1.75zm-22.805 2.214h.997c0-1.438-.139-1.039 1.368-1.48.761-.221 1.433-.542 1.737-1.208.159-.348.267-.915-.121-1.648-.715-1.349-.914-2.53-.534-3.161.41-.682 1.702-.681 2.114.012.7 1.175-.596 2.986-.766 3.736h1.048c.33-.75.904-1.656.904-2.925.001-1.509-.982-2.326-2.247-2.326-1.87 0-3.17 1.787-1.4 5.129.581 1.099-.619 1.359-1.908 1.657-1.12.258-1.194.805-1.194 1.751l.002.463z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Bulletin = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M7.496 20h2.633l-3.42 4h-2.627l3.414-4zm9.504-14h-8v1h8v-1zm-6 18h2v-4h-2v4zm2.855-4l3.42 4h2.627l-3.414-4h-2.633zm.145-8h-5v1h5v-1zm3-2h-8v1h8v-1zm0-2h-8v1h8v-1zm6-5h-1v8c0 1.625-5 7-7 7h-13v-15h-1v-3h22v3zm-3 0h-16v13h10.682c2.077 0 1.318-4 1.318-4s4 .825 4-1.229v-7.771zm-12 3h-1v1h1v-1zm0 2h-1v1h1v-1zm0 2h-1v1h1v-1zm0 2h-1v1h1v-1z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Book = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M23 5v13.883l-1 .117v-16c-3.895.119-7.505.762-10.002 2.316-2.496-1.554-6.102-2.197-9.998-2.316v16l-1-.117v-13.883h-1v15h9.057c1.479 0 1.641 1 2.941 1 1.304 0 1.461-1 2.942-1h9.06v-15h-1zm-12 13.645c-1.946-.772-4.137-1.269-7-1.484v-12.051c2.352.197 4.996.675 7 1.922v11.613zm9-1.484c-2.863.215-5.054.712-7 1.484v-11.613c2.004-1.247 4.648-1.725 7-1.922v12.051z\" />\r\n  </svg>\r\n);\r\n\r\nexport const Logo = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M24 10.935v2.131l-8 3.947v-2.23l5.64-2.783-5.64-2.79v-2.223l8 3.948zm-16 3.848l-5.64-2.783 5.64-2.79v-2.223l-8 3.948v2.131l8 3.947v-2.23zm7.047-10.783h-2.078l-4.011 16h2.073l4.016-16z\" />\r\n  </svg>\r\n);\r\nexport const HeartFull = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"#ED4956\"\r\n  >\r\n    <path d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\" />\r\n  </svg>\r\n);\r\nexport const HeartEmpty = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M6.28 3c3.236.001 4.973 3.491 5.72 5.031.75-1.547 2.469-5.021 5.726-5.021 2.058 0 4.274 1.309 4.274 4.182 0 3.442-4.744 7.851-10 13-5.258-5.151-10-9.559-10-13 0-2.676 1.965-4.193 4.28-4.192zm.001-2c-3.183 0-6.281 2.187-6.281 6.192 0 4.661 5.57 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-4.011-3.097-6.182-6.274-6.182-2.204 0-4.446 1.042-5.726 3.238-1.285-2.206-3.522-3.248-5.719-3.248z\" />\r\n  </svg>\r\n);\r\n\r\nexport const ViewIcon = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12.015 7c4.751 0 8.063 3.012 9.504 4.636-1.401 1.837-4.713 5.364-9.504 5.364-4.42 0-7.93-3.536-9.478-5.407 1.493-1.647 4.817-4.593 9.478-4.593zm0-2c-7.569 0-12.015 6.551-12.015 6.551s4.835 7.449 12.015 7.449c7.733 0 11.985-7.449 11.985-7.449s-4.291-6.551-11.985-6.551zm-.015 3c-2.21 0-4 1.791-4 4s1.79 4 4 4c2.209 0 4-1.791 4-4s-1.791-4-4-4zm-.004 3.999c-.564.564-1.479.564-2.044 0s-.565-1.48 0-2.044c.564-.564 1.479-.564 2.044 0s.565 1.479 0 2.044z\" />\r\n  </svg>\r\n);\r\nexport const Comment = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M12 1c-6.338 0-12 4.226-12 10.007 0 2.05.739 4.063 2.047 5.625l-1.993 6.368 6.946-3c1.705.439 3.334.641 4.864.641 7.174 0 12.136-4.439 12.136-9.634 0-5.812-5.701-10.007-12-10.007zm0 1c6.065 0 11 4.041 11 9.007 0 4.922-4.787 8.634-11.136 8.634-1.881 0-3.401-.299-4.946-.695l-5.258 2.271 1.505-4.808c-1.308-1.564-2.165-3.128-2.165-5.402 0-4.966 4.935-9.007 11-9.007zm-5 7.5c.828 0 1.5.672 1.5 1.5s-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5.672-1.5 1.5-1.5zm5 0c.828 0 1.5.672 1.5 1.5s-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5.672-1.5 1.5-1.5zm5 0c.828 0 1.5.672 1.5 1.5s-.672 1.5-1.5 1.5-1.5-.672-1.5-1.5.672-1.5 1.5-1.5z\" />\r\n  </svg>\r\n);\r\n\r\nexport const DropdownArrow = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M0 7.33l2.829-2.83 9.175 9.339 9.167-9.339 2.829 2.83-11.996 12.17z\" />\r\n  </svg>\r\n);\r\n\r\nexport const X = () => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport { Logo } from \"./Icons\";\r\n\r\nconst Animation = keyframes`\r\n    0%{\r\n        opacity:0\r\n    }\r\n    50%{\r\n        opacity:1\r\n    }\r\n    100%{\r\n        opacity:0\r\n    }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    animation: ${Animation} 1s linear infinite;\r\n    width:100%:\r\n    text-aling:center;\r\n`;\r\n\r\nexport default () => (\r\n  <Loader>\r\n    <Logo size={36} />\r\n  </Loader>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst FatText = ({ text, className, onClick }) => (\r\n  <Text className={className} onClick={onClick}>\r\n    {text}\r\n  </Text>\r\n);\r\n\r\nFatText.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FatText;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getSize = size => {\r\n  let number;\r\n  if (size === \"sm\") {\r\n    number = 30;\r\n  } else if (size === \"md\") {\r\n    number = 50;\r\n  } else if (size === \"lg\") {\r\n    number = 150;\r\n  }\r\n  return `\r\n    width:${number}px;\r\n    height:${number}px;\r\n`;\r\n};\r\n\r\nconst Container = styled.div`\r\n  ${props => getSize(props.size)};\r\n  background-image: url(${props => props.url});\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Avatar = ({ size, url, className }) => (\r\n  <Container className={className} size={size} url={url} />\r\n);\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport TextareaAutoSize from \"react-autosize-textarea\";\r\n// import TextareaAutoSize from \"react-autosize-textarea\";\r\nimport FatText from \"../FatText\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HeartFull, HeartEmpty, Comment as CommentIcon } from \"../Icons\";\r\n\r\nconst BulletinContainer2 = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  width: 650px;\r\n  height: 80vh;\r\n  overflow-y: auto;\r\n  margin-left: 20px;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n`;\r\n\r\nconst UserColumn = styled.div`\r\n  margin-left: 10px;\r\n`;\r\nconst Classes = styled.span`\r\n  display: block;\r\n  margin-top: 7px;\r\n  font-size: 12px;\r\n`;\r\nconst TitleContainer = styled.div`\r\n  margin-left: 10px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  width: ;\r\n  height: 60px;\r\n`;\r\n\r\nconst Title = styled(FatText)`\r\n  width: 80%;\r\n  font-size: 12pt;\r\n`;\r\nconst Main = styled.div`\r\n  padding: 10px;\r\n  margin: 0 10px;\r\n  font-size: 9pt;\r\n`;\r\nconst Files = styled.div`\r\n  margin: 0 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst File = styled.div``;\r\n\r\nconst Metas = styled.span``;\r\n\r\nconst Meta = styled.div`\r\n  margin: 0 10px;\r\n  padding: 10px;\r\n  ${Metas} {\r\n    &:first-child {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\nconst MetaText = styled(FatText)`\r\n  margin-left: 5px;\r\n  font-size: 13pt;\r\n`;\r\n\r\nconst Button = styled.span``;\r\n\r\nconst TimeStamp = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 8pt;\r\n  color: ${props => props.theme.lightGray1};\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutoSize)`\r\n  margin-left: 10px;\r\n  border: none;\r\n  width: 90%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  resize: none;\r\n  font-size: 16px;\r\n  background-color: #e1e8ed;\r\n  margin-top: 15px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Comments = styled.ul`\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Comment = styled.li`\r\n  margin-bottom: 7px;\r\n  span {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  id,\r\n  files,\r\n  author,\r\n  classifyNum,\r\n  main,\r\n  announcement,\r\n  title,\r\n  caption,\r\n  isLiked,\r\n  viewsCount,\r\n  likesCount,\r\n  commentsCount,\r\n  views,\r\n  likes,\r\n  comments,\r\n  createdAt,\r\n  toggleLike,\r\n  onKeyPress,\r\n  newComment\r\n}) => {\r\n  return (\r\n    <>\r\n      <BulletinContainer2>\r\n        <Header>\r\n          <Avatar size=\"md\" url={author.avatar} className=\"\" />\r\n          <UserColumn>\r\n            <Link to={`/${author.email}`}>\r\n              <FatText text={author.userName} />\r\n            </Link>\r\n            <Classes>\r\n              {author.classes === 1\r\n                ? \"신입회원\"\r\n                : author.classes === 2\r\n                ? \"일반회원\"\r\n                : \"정회원\"}\r\n            </Classes>\r\n          </UserColumn>\r\n        </Header>\r\n        <TitleContainer>\r\n          <Title text={title} />\r\n        </TitleContainer>\r\n        <Main>{caption}</Main>\r\n        <Files>\r\n          {files && files.map(file => <File key={file.id} src={file.url} />)} 　\r\n        </Files>\r\n        <Meta>\r\n          <Metas>\r\n            <Button onClick={toggleLike}>\r\n              {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n            </Button>\r\n            <MetaText text={likesCount + \"\"} />\r\n          </Metas>\r\n          <Metas>\r\n            <CommentIcon />\r\n            <MetaText text={commentsCount + \"\"} />\r\n          </Metas>\r\n        </Meta>\r\n        <TimeStamp>{createdAt + \"\"}</TimeStamp>\r\n\r\n        {comments && (\r\n          <Comments>\r\n            {comments.map(comment => (\r\n              <Comment key={comment.id}>\r\n                <FatText text={comment.user.userName + \"\"} />\r\n                {comment.text}\r\n              </Comment>\r\n            ))}\r\n          </Comments>\r\n        )}\r\n        <Textarea\r\n          placeholder={\"댓글을 입력하세요.\"}\r\n          value={newComment.value}\r\n          onChange={newComment.onChange}\r\n          onKeyPress={onKeyPress}\r\n        ></Textarea>\r\n      </BulletinContainer2>\r\n    </>\r\n  );\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const ME = gql`\r\n  {\r\n    me {\r\n      id\r\n      email\r\n      isSelf\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport BulletinPresenter from \"./BulletinPresenter\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SEE_POST, TOGGLE_POST } from \"./BulletinQueries\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { TOGGLE_LIKE, ADD_COMMENT } from \"./BulletinQueries\";\r\nimport { toast } from \"react-toastify\";\r\nimport Button from \"../Button/Button\";\r\nimport Loader from \"../Loader\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { ME } from \"../../SharedQueries\";\r\nconst BulletinContainer = ({\r\n  id,\r\n  files,\r\n  author,\r\n  classifyNum,\r\n  main,\r\n  announcement,\r\n  title,\r\n  caption,\r\n  isLiked,\r\n  isViewed,\r\n  viewsCount,\r\n  likesCount,\r\n  commentsCount,\r\n  views,\r\n  likes,\r\n  comments,\r\n  createdAt\r\n}) => {\r\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\r\n    variables: { postId: id }\r\n  });\r\n  const [togglePostMutation] = useMutation(TOGGLE_POST, {\r\n    variables: { postId: id }\r\n  });\r\n  const newComment = useInput(\"\");\r\n\r\n  const [isLikedS, setIsLiked] = useState(isLiked);\r\n  const [likeCountS, setLikeCount] = useState(likesCount);\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: newComment.value }\r\n  });\r\n\r\n  // if (isViewed === false) {\r\n  //   togglePostMutation();\r\n  // }\r\n\r\n  const toggleLike = () => {\r\n    toggleLikeMutation();\r\n\r\n    if (isLikedS === true) {\r\n      setIsLiked(false);\r\n      setLikeCount(likeCountS - 1);\r\n    } else {\r\n      setIsLiked(true);\r\n      setLikeCount(likeCountS + 1);\r\n    }\r\n  };\r\n\r\n  function createdAtParsed(createdAt) {\r\n    return createdAt.substring(0, 10) + \"  \" + createdAt.substring(11, 19);\r\n  }\r\n\r\n  const onKeyPress = async event => {\r\n    const { which } = event;\r\n\r\n    if (which === 13) {\r\n      event.preventDefault();\r\n\r\n      try {\r\n        await addCommentMutation();\r\n      } catch {\r\n        toast.error(\"댓글을 입력할 수 없습니다.\");\r\n      }\r\n      newComment.setValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <BulletinPresenter\r\n        id={id}\r\n        files={files}\r\n        author={author}\r\n        classifyNum={classifyNum}\r\n        main={main}\r\n        announcement={announcement}\r\n        title={title}\r\n        caption={caption}\r\n        isLiked={isLikedS}\r\n        viewsCount={viewsCount}\r\n        likesCount={likeCountS}\r\n        commentsCount={commentsCount}\r\n        views={views}\r\n        likes={likes}\r\n        comments={comments}\r\n        createdAt={createdAtParsed(createdAt)}\r\n        toggleLike={toggleLike}\r\n        onKeyPress={onKeyPress}\r\n        newComment={newComment}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nBulletinContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  files: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  author: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      userName: PropTypes.string.isRequired,\r\n      email: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      classes: PropTypes.number.isRequired\r\n    }).isRequired\r\n  ),\r\n  classifyNum: PropTypes.number.isRequired,\r\n  main: PropTypes.bool.isRequired,\r\n  announcement: PropTypes.bool.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  isLiked: PropTypes.bool.isRequired,\r\n  viewsCount: PropTypes.number,\r\n  likesCount: PropTypes.number,\r\n  commentsCount: PropTypes.number,\r\n  views: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  likes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      user: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          email: PropTypes.string.isRequired,\r\n          userName: PropTypes.string.isRequired,\r\n          avatar: PropTypes.string.isRequired\r\n        })\r\n      ),\r\n      text: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  createdAt: PropTypes.string\r\n};\r\n\r\nexport default BulletinContainer;\r\n","import BulletinBridge from \"./BulletinBridge\";\r\nexport default BulletinBridge;\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SEE_POST } from \"./BulletinQueries\";\r\nimport Loader from \"../Loader\";\r\nimport BulletinContainer from \"./BulletinContainer\";\r\n\r\nconst BulletinBridge = postId => {\r\n  const { data, loading } = useQuery(SEE_POST, {\r\n    variables: { id: postId.postId }\r\n  });\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  } else if (!loading && data && data.seePost) {\r\n    const {\r\n      seePost: {\r\n        id,\r\n        files,\r\n        author,\r\n        classifyNum,\r\n        main,\r\n        announcement,\r\n        title,\r\n        caption,\r\n        isLiked,\r\n        isViewed,\r\n        viewsCount,\r\n        likesCount,\r\n        commentsCount,\r\n        views,\r\n        likes,\r\n        comments,\r\n        createdAt\r\n      }\r\n    } = data;\r\n    return (\r\n      <BulletinContainer\r\n        id={id}\r\n        files={files}\r\n        author={author}\r\n        classifyNum={classifyNum}\r\n        main={main}\r\n        announcement={announcement}\r\n        title={title}\r\n        caption={caption}\r\n        isLiked={isLiked}\r\n        isViewed={isViewed}\r\n        viewsCount={viewsCount}\r\n        likesCount={likesCount}\r\n        commentsCount={commentsCount}\r\n        views={views}\r\n        likes={likes}\r\n        comments={comments}\r\n        createdAt={createdAt}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nBulletinBridge.propTypes = {\r\n  postId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BulletinBridge;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { DropdownArrow } from \"../Icons\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 95%;\r\n  border-top: 0.5px solid ${props => props.theme.lightGray3};\r\n  border-bottom: 0.5px solid ${props => props.theme.lightGray3};\r\n  color: black;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\nconst Title = styled.span`\r\n  padding: 15px 0px;\r\n  margin-right: 5px;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst DropdownButton = ({ onClick, title, participantsCount }) => (\r\n  <Container onClick={onClick}>\r\n    <Title>\r\n      {title} 참가자({participantsCount} 명)\r\n    </Title>\r\n    <DropdownArrow />\r\n  </Container>\r\n);\r\n\r\nDropdownButton.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default DropdownButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Loader from \"./Loader\";\r\nimport { gql } from \"apollo-boost\";\r\nimport Avatar from \"./Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FatText from \"./FatText\";\r\n\r\nconst SEE_PARTICIPANTS_LIST = gql`\r\n  query seeParticipantsList($meetingId: String!) {\r\n    seeParticipantsList(meetingId: $meetingId) {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        userName\r\n        classes\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Participant = styled.div`\r\n  margin: 5px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserColumn = styled.div`\r\n  padding: 10px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 11pt;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst Classes = styled.span`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Participants = ({ meetingId }) => {\r\n  console.log(meetingId);\r\n\r\n  const { data, loading } = useQuery(SEE_PARTICIPANTS_LIST, {\r\n    variables: { meetingId }\r\n  });\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      {!loading &&\r\n        data &&\r\n        data.seeParticipantsList &&\r\n        data.seeParticipantsList.map(participant => (\r\n          <Participant key={participant.id}>\r\n            <Avatar size=\"sm\" url={participant.user.avatar} className=\"\" />\r\n            <UserColumn>\r\n              <Link to={`/${participant.user.email}`}>\r\n                <FatText text={participant.user.userName} />\r\n              </Link>\r\n              <Classes>\r\n                {participant.user.classes === 1\r\n                  ? \"신입회원\"\r\n                  : participant.user.classes === 2\r\n                  ? \"일반회원\"\r\n                  : \"정회원\"}\r\n              </Classes>\r\n            </UserColumn>\r\n          </Participant>\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nParticipants.propTypes = {\r\n  meetingId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Participants;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.button`\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  background-color: ${props => props.theme.lightGray1};\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button = ({ text, onClick }) => (\r\n  <Container onClick={onClick} disabled>\r\n    {text}\r\n  </Container>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FatText from \"../FatText\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DropdownButton from \"../Button/DropdownButton\";\r\nimport Participants from \"../Participants\";\r\nimport Button from \"../Button/Button\";\r\nimport DisabledButton from \"../Button/DisabledButton\";\r\nconst MeetingContainer = styled.div`\r\n  width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  height: auto;\r\n  border: 3px solid ${props => props.theme.lightGray1};\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst Header = styled.div`\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-itmes: center;\r\n  height: 150px;\r\n  border: 2px solid ${props => props.theme.lightGray3};\r\n  margin-bottom: 10px;\r\n`;\r\nconst Title = styled.div`\r\n  padding: 10px;\r\n  width: 100%;\r\n`;\r\nconst User = styled.div`\r\n  padding: 10px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  a {\r\n    color: inherit;\r\n  }\r\n`;\r\nconst Classes = styled.span`\r\n  margin-left: 10px;\r\n`;\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MeetingTime = styled.div`\r\n  margin-bottom: 10px;\r\n  font-size: 10pt;\r\n\r\n  border-radius: 10px;\r\n  border: 1px solid ${props => props.theme.lightGray3};\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst MeetingPlace = styled.div`\r\n  font-size: 10pt;\r\n  margin-bottom: 10px;\r\n  border-radius: 10px;\r\n  border: 1px solid ${props => props.theme.lightGray3};\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst MeetingPrice = styled.div`\r\n  font-size: 10pt;\r\n\r\n  margin-bottom: 10px;\r\n\r\n  border-radius: 10px;\r\n  border: 1px solid ${props => props.theme.lightGray3};\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst Deadline = styled.div`\r\n  font-size: 10pt;\r\n\r\n  margin-bottom: 10px;\r\n\r\n  border-radius: 10px;\r\n  border: 1px solid ${props => props.theme.lightGray3};\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst MeetingHeadCounts = styled.div`\r\n  font-size: 10pt;\r\n\r\n  margin-bottom: 10px;\r\n\r\n  border-radius: 10px;\r\n  border: 1px solid ${props => props.theme.lightGray3};\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\nconst Text = styled(FatText)`\r\n  font-size: 13pt;\r\n  margin: 0 20px;\r\n`;\r\n\r\nexport default ({\r\n  meetingId,\r\n  title,\r\n  main,\r\n  user: { id, avatar, userName, classes, email },\r\n  meetingTime,\r\n  meetingPlace,\r\n  meetingPrice,\r\n  deadline,\r\n  meetingHeadCounts,\r\n  participants,\r\n  isParticipated,\r\n  participantsCount,\r\n  createdAt,\r\n  dropdown,\r\n  clickDrop,\r\n  participate,\r\n  userId,\r\n  setEditing\r\n}) => {\r\n  return (\r\n    <MeetingContainer>\r\n      <Header>\r\n        <Title>\r\n          <FatText text={title} />\r\n        </Title>\r\n        {\r\n          <User>\r\n            <Avatar size=\"md\" url={avatar} />\r\n            <Link to={`/${email}`}>\r\n              <FatText text={userName} />\r\n            </Link>\r\n            <Classes>\r\n              {classes === 1\r\n                ? \"신입회원\"\r\n                : classes === 2\r\n                ? \"일반회원\"\r\n                : \"정회원\"}\r\n            </Classes>\r\n          </User>\r\n        }\r\n      </Header>\r\n      <MainContainer>\r\n        <MeetingTime>\r\n          <Text text={\" 모임 시간 :   \"} />\r\n          {meetingTime}\r\n        </MeetingTime>\r\n\r\n        <MeetingPlace>\r\n          <Text text={\" 모임 장소 :   \"} />\r\n          {meetingPlace}\r\n        </MeetingPlace>\r\n\r\n        <MeetingPrice>\r\n          <Text text={\" 모임 가격 :   \"} />\r\n          {meetingPrice}\r\n        </MeetingPrice>\r\n\r\n        <Deadline>\r\n          <Text text={\" 마감 기간 :   \"} />\r\n          {deadline}\r\n        </Deadline>\r\n\r\n        <MeetingHeadCounts>\r\n          <Text text={\" 제한 인원 :   \"} />\r\n          {meetingHeadCounts}\r\n        </MeetingHeadCounts>\r\n      </MainContainer>\r\n      <DropdownButton\r\n        title={title}\r\n        participantsCount={participantsCount}\r\n        onClick={() => clickDrop()}\r\n      />\r\n      {dropdown ? <Participants meetingId={meetingId} /> : null}\r\n      <ButtonContainer>\r\n        {participantsCount <= meetingHeadCounts ? (\r\n          <Button text={\"참석하기\"} onClick={() => participate()} />\r\n        ) : (\r\n          <DisabledButton text={\"참석하기\"} />\r\n        )}\r\n      </ButtonContainer>\r\n      <ButtonContainer>\r\n        {userId === id ? (\r\n          <Button\r\n            text={\"모임 수정하기\"}\r\n            onClick={() => {\r\n              setEditing(meetingId);\r\n            }}\r\n          />\r\n        ) : null}\r\n      </ButtonContainer>\r\n    </MeetingContainer>\r\n  );\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const PARTICIPATE = gql`\r\n  mutation participate($id: String!) {\r\n    participate(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import MeetingContainer from \"./MeetingContainer\";\r\nexport default MeetingContainer;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MeetingPresenter from \"./MeetingPresenter\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { PARTICIPATE } from \"./MeetingQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst MeetingContainer = ({\r\n  id,\r\n  title,\r\n  main,\r\n  user,\r\n  meetingTime,\r\n  meetingPlace,\r\n  meetingPrice,\r\n  deadline,\r\n  meetingHeadCounts,\r\n  participants,\r\n  isParticipated,\r\n  participantsCount,\r\n  createdAt,\r\n  userId,\r\n  setEditId,\r\n  setEditing\r\n}) => {\r\n  const [dropdown, setDropdown] = useState(false);\r\n\r\n  const clickDrop = () => {\r\n    if (dropdown === true) {\r\n      setDropdown(false);\r\n    } else if (dropdown === false) {\r\n      setDropdown(true);\r\n    }\r\n  };\r\n\r\n  const [participateMutation] = useMutation(PARTICIPATE, {\r\n    variables: { id: id }\r\n  });\r\n\r\n  const participate = async () => {\r\n    const {\r\n      data: { paritcipate }\r\n    } = await participateMutation();\r\n    if (paritcipate) {\r\n      toast.success(\"참석에 성공했습니다.\");\r\n    } else if (!participate) {\r\n      toast.error(\"다시 시도해주세요.\");\r\n    }\r\n  };\r\n  console.log(userId);\r\n\r\n  return (\r\n    <MeetingPresenter\r\n      meetingId={id}\r\n      title={title}\r\n      main={main}\r\n      user={user}\r\n      meetingTime={meetingTime}\r\n      meetingPlace={meetingPlace}\r\n      meetingPrice={meetingPrice}\r\n      deadline={deadline}\r\n      meetingHeadCounts={meetingHeadCounts}\r\n      participants={participants}\r\n      isParticipated={isParticipated}\r\n      participantsCount={participantsCount}\r\n      createdAt={createdAt}\r\n      dropdown={dropdown}\r\n      clickDrop={clickDrop}\r\n      participate={participate}\r\n      userId={userId}\r\n      setEditId={setEditId}\r\n      setEditing={setEditing}\r\n    />\r\n  );\r\n};\r\n\r\nMeetingContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  user: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      email: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      userName: PropTypes.string.isRequired,\r\n      classes: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  meetingTime: PropTypes.string.isRequired,\r\n  meetingPlace: PropTypes.string.isRequired,\r\n  meetingPrice: PropTypes.string.isRequired,\r\n  deadline: PropTypes.string.isRequired,\r\n  meetingHeadCounts: PropTypes.number.isRequired,\r\n  participants: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      user: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          avatar: PropTypes.string.isRequired,\r\n          email: PropTypes.string.isRequired,\r\n          userName: PropTypes.string.isRequired,\r\n          classes: PropTypes.string.isRequired\r\n        })\r\n      )\r\n    })\r\n  ),\r\n  isParticipated: PropTypes.bool,\r\n  participantsCount: PropTypes.number,\r\n  createdAt: PropTypes.string\r\n};\r\n\r\nexport default MeetingContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Post from \"../Components/Bulletin\";\r\nimport Meeting from \"../Components/Meeting\";\r\nimport Loader from \"../Components/Loader\";\r\n\r\nconst MAIN_POST = gql`\r\n  {\r\n    mainPost {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst MAIN_MEETING = gql`\r\n  {\r\n    mainMeeting {\r\n      id\r\n      title\r\n      main\r\n      user {\r\n        id\r\n        avatar\r\n        userName\r\n        classes\r\n        email\r\n      }\r\n      meetingTime\r\n      meetingPlace\r\n      meetingPrice\r\n      deadline\r\n      meetingHeadCounts\r\n      participants {\r\n        id\r\n        user {\r\n          id\r\n          userName\r\n          avatar\r\n          classes\r\n          email\r\n        }\r\n      }\r\n      isParticipated\r\n      participantsCount\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  border-radius: 0px;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n  padding: 20px;\r\n`;\r\n\r\nconst PostWrapper = styled.div`\r\n    width: 650px:\r\n    height:100%;\r\n    background-color:${props => props.theme.grayColor1};\r\n`;\r\n\r\nconst MeetingWrapper = styled.div`\r\n    width:800px:\r\n    height:100%;\r\n    background-color:${props => props.theme.grayColor1};\r\n`;\r\n// const Post = styled.div`\r\n//   height: 300px;\r\n//   width: 300px;\r\n//   margin: 20px;\r\n//   border: 1px solid black;\r\n// `;\r\n\r\n// const Meeting = styled.div`\r\n//   height: 300px;\r\n//   width: 300px;\r\n//   margin: 20px;\r\n//   border: 1px solid black;\r\n// `;\r\n\r\nexport default () => {\r\n  const { data: dataPost, loading: loadingPost } = useQuery(MAIN_POST);\r\n  const { data: dataMeeting, loading: loadingMeeting } = useQuery(MAIN_MEETING);\r\n  console.log(dataPost);\r\n  console.log(loadingPost);\r\n  console.log(dataMeeting);\r\n  console.log(dataMeeting);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box>\r\n        <MeetingWrapper>\r\n          {loadingMeeting && <Loader />}\r\n\r\n          {!loadingMeeting && dataMeeting && dataMeeting.mainMeeting && (\r\n            <Meeting\r\n              id\r\n              title={dataMeeting.mainMeeting.title}\r\n              main={dataMeeting.mainMeeting.main}\r\n              user={dataMeeting.mainMeeting.user}\r\n              meetingTime={dataMeeting.mainMeeting.meetingTime}\r\n              meetingPlace={dataMeeting.mainMeeting.meetingPlace}\r\n              meetingPrice={dataMeeting.mainMeeting.meetingPrice}\r\n              deadline={dataMeeting.mainMeeting.deadline}\r\n              meetingHeadCounts={dataMeeting.mainMeeting.meetingHeadCounts}\r\n              participants={dataMeeting.mainMeeting.participants}\r\n              isParticipated={dataMeeting.mainMeeting.isParticipated}\r\n              participantsCount={dataMeeting.mainMeeting.participantsCount}\r\n              createdAt={dataMeeting.mainMeeting.createdAt}\r\n            />\r\n          )}\r\n        </MeetingWrapper>\r\n      </Box>\r\n      <Box>\r\n        <PostWrapper>\r\n          {loadingPost && <Loader />}\r\n          {!loadingPost && dataPost && dataPost.mainPost && (\r\n            <Post postId={dataPost.mainPost.id} />\r\n          )}\r\n        </PostWrapper>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport FatText from \"./FatText\";\r\nimport { ViewIcon, HeartFull } from \"./Icons\";\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: left;\r\n  flex-direction: row;\r\n  ${props => props.theme.border}\r\n`;\r\n\r\nconst ContainerDivider = styled.div`\r\n  display: flex;\r\n  &:first-child {\r\n    width: 60%;\r\n    text-align: left;\r\n    padding: 10px;\r\n  }\r\n  &:last-child {\r\n    width: 40%;\r\n\r\n    padding: 10px;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst Title = styled(FatText)`\r\n  padding: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ViewContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst HeartContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst View = styled(FatText)`\r\n  align-items: center;\r\n  margin: 0 10px;\r\n  padding: 5px 0;\r\n`;\r\n\r\nconst Like = styled(FatText)`\r\n  align-items: center;\r\n  margin: 0 10px;\r\n  padding: 5px 0;\r\n`;\r\n\r\nconst BulletinLine = ({ post, openBulletin }) => {\r\n  return (\r\n    <Container>\r\n      <ContainerDivider>\r\n        <Title text={post.title} onClick={() => openBulletin(post)} />\r\n      </ContainerDivider>\r\n      <ContainerDivider>\r\n        <ViewContainer>\r\n          <ViewIcon />\r\n          <View text={String(post.viewsCount)} />\r\n        </ViewContainer>\r\n        <HeartContainer>\r\n          <HeartFull />\r\n          <Like text={post.likesCount + \"개\"} />\r\n        </HeartContainer>\r\n      </ContainerDivider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nBulletinLine.propTypes = {\r\n  post: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          userName: PropTypes.string.isRequired,\r\n          avatar: PropTypes.string.isRequired,\r\n          classes: PropTypes.number.isRequired\r\n        })\r\n      ),\r\n      viewsCount: PropTypes.number,\r\n      likesCount: PropTypes.number\r\n    })\r\n  )\r\n};\r\nexport default BulletinLine;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n// import TextareaAutoSize from \"react-autosize-textarea\";\r\nimport FatText from \"../FatText\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Bulletin from \"../Bulletin\";\r\nimport BulletinLine from \"../BulletinLine\";\r\nimport { HeartFull, ViewIcon } from \"../Icons\";\r\n\r\nconst TabContainer = styled(Tabs)`\r\n  width: 370px;\r\n  height: 80vh;\r\n  font-size: 10pt;\r\n`;\r\n\r\nexport default ({ posts, action, openBulletin }) => {\r\n  return (\r\n    <>\r\n      <TabContainer>\r\n        <TabList>\r\n          <Tab>전체</Tab>\r\n          <Tab>공지사항</Tab>\r\n          <Tab>가입인사</Tab>\r\n          <Tab>익명게시판</Tab>\r\n        </TabList>\r\n\r\n        <TabPanel>\r\n          {posts.map(post => (\r\n            <BulletinLine post={post} openBulletin={openBulletin} />\r\n          ))}\r\n        </TabPanel>\r\n\r\n        <TabPanel>\r\n          {posts.map(post =>\r\n            post.classifyNum === 1 ? (\r\n              <BulletinLine post={post} openBulletin={openBulletin} />\r\n            ) : null\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {posts.map(post =>\r\n            post.classifyNum === 2 ? (\r\n              <BulletinLine post={post} openBulletin={openBulletin} />\r\n            ) : null\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel>\r\n          {posts.map(post =>\r\n            post.classifyNum === 3 ? (\r\n              <BulletinLine post={post} openBulletin={openBulletin} />\r\n            ) : null\r\n          )}\r\n        </TabPanel>\r\n      </TabContainer>\r\n      {action !== \"nothing\" ? <Bulletin postId={action} /> : null}\r\n    </>\r\n  );\r\n};\r\n","import BulletinContainer from \"./BulletinListContainer\";\r\nexport default BulletinContainer;\r\n","import React, { useState } from \"react\";\r\nimport BulletinListPresenter from \"./BulletinListPresenter\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BulletinListContainer = ({\r\n  id,\r\n  classifyNum,\r\n  posts,\r\n  setEditId,\r\n  userId\r\n}) => {\r\n  const [action, setAction] = useState(\"nothing\");\r\n\r\n  const openBulletin = async post => {\r\n    if (action === \"nothing\") {\r\n      await setAction(post.id);\r\n      if (userId === post.author.id) {\r\n        await setEditId(post.id);\r\n      } else {\r\n        await setEditId(\"\");\r\n      }\r\n    } else if (action !== \"nothing\") {\r\n      await setAction(post.id);\r\n      if (userId === post.author.id) {\r\n        await setEditId(post.id);\r\n      } else {\r\n        await setEditId(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BulletinListPresenter\r\n      id={id}\r\n      classifyNum={classifyNum}\r\n      posts={posts}\r\n      openBulletin={openBulletin}\r\n      action={action}\r\n    />\r\n  );\r\n};\r\n\r\nBulletinListContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  classifyNum: PropTypes.number.isRequired,\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      author: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired\r\n        })\r\n      ),\r\n      likesCount: PropTypes.number,\r\n      viewsCount: PropTypes.number,\r\n      classifyNum: PropTypes.number.isRequired,\r\n      createdAt: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired\r\n  // id: PropTypes.string.isRequired,\r\n  // title: PropTypes.string.isRequired,\r\n  // likesCount: PropTypes.number,\r\n  // viewsCount: PropTypes.number,\r\n  // classifyNum: PropTypes.number.isRequired,\r\n  // createdAt: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BulletinListContainer;\r\n","import React from \"react\";\r\nimport { Checkbox } from \"semantic-ui-react\";\r\n\r\nconst CheckboxToggle = ({ onClick, checked }) => (\r\n  <Checkbox toggle defaultChecked={checked} onClick={onClick} />\r\n);\r\n\r\nexport default CheckboxToggle;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TextareaType = styled.textarea`\r\n  border: 0;\r\n  border: ${props => props.theme.boxBorder};\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background-color: ${props => props.theme.lightGray5};\r\n  font-size: 12px;\r\n  padding: 15px;\r\n`;\r\n\r\nconst Textarea = ({\r\n  placeholder,\r\n  className,\r\n  value,\r\n  onChange,\r\n  type = \"text\",\r\n  disabled = false\r\n}) => (\r\n  <TextareaType\r\n    className={className}\r\n    placeholder={placeholder}\r\n    value={value}\r\n    onChange={onChange}\r\n    type={type}\r\n    disabled={disabled}\r\n  />\r\n);\r\nTextarea.propTypes = {\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default Textarea;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport CheckboxToggle from \"../semi-component/toggle\";\r\nimport Input from \"../Input\";\r\nimport { X } from \"../Icons\";\r\nimport Button from \"../Button/Button\";\r\nimport Textarea from \"../Textarea\";\r\nimport \"react-dropdown/style.css\";\r\n\r\nconst Container = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n`;\r\nconst XButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  text-align: right;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst XButton = styled.button`\r\n  width: 40px;\r\n  border: 0;\r\n  background-color: white;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst Title = styled(Input)`\r\n  width: 100%;\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  padding: 10px;\r\n  width: 600px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 11pt;\r\n  align-items: center;\r\n  &: {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst DropdownM = styled(Dropdown)`\r\n  width: 200px;\r\n`;\r\nconst CheckboxToggleM = styled(CheckboxToggle)`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst CaptionContainer = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\nconst Caption = styled(Textarea)`\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\nconst SubmitButton = styled(Button)`\r\n  margin-top: 5px;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default ({\r\n  postId,\r\n  files,\r\n  author,\r\n  titleEdit,\r\n  captionEdit,\r\n  defaultOption,\r\n  options,\r\n  clickCheck,\r\n  clickAnnounce,\r\n  mainCheck,\r\n  announceCheck,\r\n  onSubmit,\r\n  setEdit,\r\n  deletePost\r\n}) => {\r\n  if (postId === \"write\") {\r\n    return (\r\n      <>\r\n        <XButtonContainer>\r\n          <XButton onClick={() => setEdit(\"read\")}>\r\n            <X />\r\n          </XButton>\r\n        </XButtonContainer>\r\n\r\n        <Container>\r\n          <form onSubmit={onSubmit}>\r\n            <TitleContainer>\r\n              <Title placeholder={\"제목\"} {...titleEdit} />\r\n            </TitleContainer>\r\n            <SpinnerContainer>\r\n              <DropdownM\r\n                options={options}\r\n                value={defaultOption}\r\n                placeholder={\"글 종류를 선택하세요.\"}\r\n              />\r\n              <CheckboxToggleM\r\n                checked={mainCheck}\r\n                onClick={() => clickCheck()}\r\n              />{\" \"}\r\n              메인\r\n              <CheckboxToggleM\r\n                checked={announceCheck}\r\n                onClick={() => clickAnnounce()}\r\n              />{\" \"}\r\n              공지\r\n            </SpinnerContainer>\r\n            <CaptionContainer>\r\n              <Caption placeholder={\"글 내용\"} {...captionEdit} />\r\n            </CaptionContainer>\r\n            <SubmitButton text={\"글 쓰기\"} />\r\n          </form>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <XButtonContainer>\r\n          <XButton onClick={() => setEdit(\"read\")}>\r\n            <X />\r\n          </XButton>\r\n        </XButtonContainer>\r\n        <Container>\r\n          <form onSubmit={onSubmit}>\r\n            <TitleContainer>\r\n              <Title placeholder={\"제목\"} {...titleEdit} />\r\n            </TitleContainer>\r\n            <SpinnerContainer>\r\n              <DropdownM\r\n                options={options}\r\n                value={defaultOption}\r\n                placeholder={\"글 종류를 선택하세요.\"}\r\n              />\r\n              <CheckboxToggleM\r\n                checked={mainCheck}\r\n                onClick={() => clickCheck()}\r\n              />{\" \"}\r\n              메인\r\n              <CheckboxToggleM\r\n                checked={announceCheck}\r\n                onClick={() => clickAnnounce()}\r\n              />{\" \"}\r\n              공지\r\n            </SpinnerContainer>\r\n            <CaptionContainer>\r\n              <Caption placeholder={\"글 내용\"} {...captionEdit} />\r\n            </CaptionContainer>\r\n            <ButtonContainer>\r\n              <SubmitButton text={\"수정하기\"} />\r\n            </ButtonContainer>\r\n          </form>\r\n          <ButtonContainer>\r\n            <Button text={\"글 삭제\"} onClick={() => deletePost()} />\r\n          </ButtonContainer>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const SEE_POST = gql`\r\n  query seePost($id: String!) {\r\n    seePost(id: $id) {\r\n      id\r\n      files {\r\n        id\r\n        url\r\n      }\r\n      author {\r\n        id\r\n        avatar\r\n        userName\r\n        classes\r\n        email\r\n      }\r\n      classifyNum\r\n      main\r\n      announcement\r\n      title\r\n      caption\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_POST = gql`\r\n  mutation editPost(\r\n    $id: String!\r\n    $classifyNum: Int!\r\n    $main: Boolean!\r\n    $announcement: Boolean!\r\n    $title: String!\r\n    $caption: String!\r\n    $action: ACTIONS!\r\n  ) {\r\n    editPost(\r\n      id: $id\r\n      classifyNum: $classifyNum\r\n      main: $main\r\n      announcement: $announcement\r\n      title: $title\r\n      caption: $caption\r\n      action: $action\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WRITE_POST = gql`\r\n  mutation upload(\r\n    $classifyNum: Int!\r\n    $main: Boolean!\r\n    $announcement: Boolean!\r\n    $title: String!\r\n    $caption: String!\r\n  ) {\r\n    upload(\r\n      classifyNum: $classifyNum\r\n      main: $main\r\n      announcement: $announcement\r\n      title: $title\r\n      caption: $caption\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","export const classifyOptions = [\"공지사항\", \"가입인사\", \"익명게시판\"];\r\n","import EditPostContainer from \"./EditPostContainer\";\r\nexport default EditPostContainer;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useQuery, useMutation } from \"react-apollo-hooks\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport EditPostPresenter from \"./EditPostPresenter\";\r\nimport { SEE_POST, EDIT_POST, WRITE_POST } from \"./EditPostQueries\";\r\nimport Loader from \"../Loader\";\r\nimport { classifyOptions } from \"../../utils/dropdownOptions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditPostContainer = ({ postId, setEdit, refetch }) => {\r\n  const { data, loading } = useQuery(SEE_POST, {\r\n    variables: { id: postId }\r\n  });\r\n\r\n  const titleEdit = useInput(\"\");\r\n  const captionEdit = useInput(\"\");\r\n  const defaultOption = classifyOptions[0];\r\n  const [mainCheck, setMainCheck] = useState(false);\r\n  const [announceCheck, setAnnounceCheck] = useState(false);\r\n  const [writeMutation] = useMutation(WRITE_POST, {\r\n    variables: {\r\n      classifyNum: classifyOptions.indexOf(defaultOption) + 1,\r\n      main: mainCheck,\r\n      announcement: announceCheck,\r\n      title: titleEdit.value,\r\n      caption: captionEdit.value\r\n    }\r\n  });\r\n\r\n  const [editMutation] = useMutation(EDIT_POST, {\r\n    variables: {\r\n      id: postId,\r\n      classifyNum: classifyOptions.indexOf(defaultOption) + 1,\r\n      main: mainCheck,\r\n      announcement: announceCheck,\r\n      title: titleEdit.value,\r\n      caption: captionEdit.value,\r\n      action: \"EDIT\"\r\n    }\r\n  });\r\n  const [deleteMutation] = useMutation(EDIT_POST, {\r\n    variables: {\r\n      id: postId,\r\n      classifyNum: classifyOptions.indexOf(defaultOption) + 1,\r\n      main: mainCheck,\r\n      announcement: announceCheck,\r\n      title: titleEdit.value,\r\n      caption: captionEdit.value,\r\n      action: \"DELETE\"\r\n    }\r\n  });\r\n\r\n  const clickCheck = () => {\r\n    if (!mainCheck) {\r\n      setMainCheck(true);\r\n    } else if (mainCheck) {\r\n      setMainCheck(false);\r\n    }\r\n  };\r\n  const clickAnnounce = () => {\r\n    if (announceCheck === false) {\r\n      setAnnounceCheck(true);\r\n    } else if (announceCheck === true) {\r\n      setAnnounceCheck(false);\r\n    }\r\n  };\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (postId === \"write\") {\r\n      if (titleEdit.value === \"\" || captionEdit.value === \"\") {\r\n        toast.error(\"제목과 게시글 내용을 입력해주세요.\");\r\n      }\r\n      try {\r\n        const {\r\n          data: { upload }\r\n        } = await writeMutation();\r\n\r\n        if (!upload) {\r\n          toast.error(\"게시글을 등록할 수 없습니다.\");\r\n        } else if (upload) {\r\n          toast.success(\"게시글이 등록되었습니다.\");\r\n          await refetch();\r\n\r\n          setTimeout(() => setEdit(\"read\"), 1000);\r\n        }\r\n      } catch {\r\n        toast.error(\"게시글을 등록할 수 없습니다.\");\r\n      }\r\n    } else {\r\n      if (titleEdit.value === \"\" || captionEdit.value === \"\") {\r\n        toast.error(\"제목과 게시글 내용을 입력해주세요.\");\r\n      }\r\n      try {\r\n        const {\r\n          data: { editPost }\r\n        } = await editMutation();\r\n        if (!editPost) {\r\n          toast.error(\"게시글을 등록할 수 없습니다.\");\r\n        } else if (editPost) {\r\n          toast.success(\"게시글이 수정되었습니다.\");\r\n          await refetch();\r\n          setTimeout(() => setEdit(\"read\"), 1000);\r\n        }\r\n      } catch {\r\n        toast.error(\"게시글을 등록할 수 없습니다.\");\r\n      }\r\n    }\r\n  };\r\n  const deletePost = async () => {\r\n    deleteMutation();\r\n    await refetch();\r\n    setTimeout(() => setEdit(\"read\"), 1000);\r\n  };\r\n\r\n  if (postId === \"write\") {\r\n    return (\r\n      <EditPostPresenter\r\n        postId={postId}\r\n        titleEdit={titleEdit}\r\n        captionEdit={captionEdit}\r\n        defaultOption={defaultOption}\r\n        clickCheck={clickCheck}\r\n        clickAnnounce={clickAnnounce}\r\n        mainCheck={mainCheck}\r\n        announceCheck={announceCheck}\r\n        options={classifyOptions}\r\n        setEdit={setEdit}\r\n        onSubmit={onSubmit}\r\n        deletePost={deletePost}\r\n      />\r\n    );\r\n  } else {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else if (!loading && data && data.seePost) {\r\n      const {\r\n        seePost: {\r\n          id,\r\n          files,\r\n          author,\r\n          classifyNum,\r\n          main,\r\n          announcement,\r\n          title,\r\n          caption\r\n        }\r\n      } = data;\r\n      const editDefaultOption = classifyOptions[classifyNum - 1];\r\n\r\n      if (titleEdit.value === \"\") {\r\n        titleEdit.setValue(title);\r\n      }\r\n      if (captionEdit.value === \"\") {\r\n        captionEdit.setValue(caption);\r\n      }\r\n      if (main === true && mainCheck === false) {\r\n        setMainCheck(true);\r\n      }\r\n      if (announcement === true && announceCheck === false) {\r\n        setAnnounceCheck(true);\r\n      }\r\n      return (\r\n        <EditPostPresenter\r\n          id={id}\r\n          files={files}\r\n          author={author}\r\n          titleEdit={titleEdit}\r\n          captionEdit={captionEdit}\r\n          defaultOption={editDefaultOption}\r\n          options={classifyOptions}\r\n          clickCheck={clickCheck}\r\n          clickAnnounce={clickAnnounce}\r\n          mainCheck={mainCheck}\r\n          announceCheck={announceCheck}\r\n          setEdit={setEdit}\r\n          onSubmit={onSubmit}\r\n          deletePost={deletePost}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\nEditPostContainer.propTypes = {\r\n  postId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default EditPostContainer;\r\n","import React, { useState } from \"react\";\r\nimport BulletinList from \"../Components/BulletinList\";\r\nimport { gql } from \"apollo-boost\";\r\nimport styled from \"styled-components\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { useQuery, useMutation } from \"react-apollo-hooks\";\r\nimport Loader from \"../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport EditPost from \"../Components/EditPost\";\r\nimport Button from \"../Components/Button/Button\";\r\nconst SEE_FULL_BULLETIN_LIST = gql`\r\n  {\r\n    seeFullBulletinList {\r\n      id\r\n      classifyNum\r\n      posts {\r\n        id\r\n        title\r\n        author {\r\n          id\r\n        }\r\n        announcement\r\n        isViewed\r\n        likesCount\r\n        viewsCount\r\n        classifyNum\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst BulletinContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst BulletinListContainer = styled.div`\r\n  display: flex;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  margin-right: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst ButtonDownContainer = styled.span`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport default withRouter(\r\n  ({\r\n    match: {\r\n      params: { id }\r\n    }\r\n  }) => {\r\n    const [edit, setEdit] = useState(\"read\");\r\n    const [editId, setEditId] = useState(\"\");\r\n    const { refetch, data, loading } = useQuery(SEE_FULL_BULLETIN_LIST);\r\n    return (\r\n      <BulletinContainer>\r\n        <Helmet>\r\n          <title>게시판 | Originals</title>\r\n        </Helmet>\r\n        <ButtonContainer>\r\n          {edit === \"read\" && (\r\n            <ButtonDownContainer>\r\n              <Button text={\"글 쓰기\"} onClick={() => setEdit(\"write\")} />\r\n            </ButtonDownContainer>\r\n          )}\r\n          {edit === \"read\" && editId !== \"\" && (\r\n            <ButtonDownContainer>\r\n              <Button text={\"글 수정\"} onClick={() => setEdit(\"edit\")} />\r\n            </ButtonDownContainer>\r\n          )}\r\n        </ButtonContainer>\r\n        <BulletinListContainer>\r\n          {edit === \"read\" && loading && <Loader />}\r\n          {edit === \"read\" &&\r\n            !loading &&\r\n            data &&\r\n            data.seeFullBulletinList &&\r\n            data.seeFullBulletinList.map(bulletinList => (\r\n              <BulletinList\r\n                key={bulletinList.id}\r\n                id={bulletinList.id}\r\n                classifyNum={bulletinList.classifyNum}\r\n                posts={bulletinList.posts.sort(function(a, b) {\r\n                  return a.createdAt > b.createdAt\r\n                    ? -1\r\n                    : a.createdAt < b.createdAt\r\n                    ? 1\r\n                    : 0;\r\n                })}\r\n                setEditId={setEditId}\r\n                userId={id}\r\n              />\r\n            ))}\r\n        </BulletinListContainer>\r\n        {/* {edit === \"write\" && loadingMe && <Loader />} */}\r\n        {edit === \"write\" && (\r\n          <EditPost postId={\"write\"} setEdit={setEdit} refetch={refetch} />\r\n        )}\r\n        {edit === \"edit\" && (\r\n          <EditPost postId={editId} setEdit={setEdit} refetch={refetch} />\r\n        )}\r\n      </BulletinContainer>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport FatText from \"./FatText\";\r\nimport { ViewIcon, HeartFull } from \"./Icons\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: left;\r\n  flex-direction: row;\r\n  ${props => props.theme.border}\r\n`;\r\n\r\nconst ContainerDivider = styled.div`\r\n  display: flex;\r\n  &:first-child {\r\n    width: 60%;\r\n    text-align: left;\r\n    padding: 10px;\r\n  }\r\n  &:last-child {\r\n    width: 40%;\r\n\r\n    padding: 10px;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst Title = styled(FatText)`\r\n  padding: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CommentLine = ({ comment }) => {\r\n  return (\r\n    <Container>\r\n      <ContainerDivider>\r\n        <Title text={comment.text} />\r\n      </ContainerDivider>\r\n      <ContainerDivider></ContainerDivider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCommentLine.propTypes = {\r\n  comment: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          userName: PropTypes.string.isRequired,\r\n          avatar: PropTypes.string.isRequired,\r\n          classes: PropTypes.number.isRequired\r\n        })\r\n      )\r\n    })\r\n  )\r\n};\r\nexport default CommentLine;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport FatText from \"./FatText\";\r\nimport { ViewIcon, HeartFull } from \"./Icons\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: left;\r\n  flex-direction: row;\r\n  ${props => props.theme.border}\r\n`;\r\n\r\nconst ContainerDivider = styled.div`\r\n  display: flex;\r\n  &:first-child {\r\n    width: 60%;\r\n    text-align: left;\r\n    padding: 10px;\r\n  }\r\n  &:last-child {\r\n    width: 40%;\r\n\r\n    padding: 10px;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst Title = styled(FatText)`\r\n  padding: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MeetingLine = ({ participant }) => {\r\n  return (\r\n    <Container>\r\n      <ContainerDivider>\r\n        <Title text={participant.meeting.title} />\r\n      </ContainerDivider>\r\n      <ContainerDivider>\r\n        <Title text={participant.meeting.meetingTime} />\r\n      </ContainerDivider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nMeetingLine.propTypes = {\r\n  participant: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      user: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          userName: PropTypes.string.isRequired,\r\n          avatar: PropTypes.string.isRequired,\r\n          classes: PropTypes.number.isRequired\r\n        })\r\n      ),\r\n      meeting: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          title: PropTypes.string.isRequired,\r\n          user: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n              id: PropTypes.string.isRequired,\r\n              userName: PropTypes.string.isRequired,\r\n              avatar: PropTypes.string.isRequired,\r\n              classes: PropTypes.number.isRequired\r\n            })\r\n          ),\r\n          meetingTime: PropTypes.string.isRequired\r\n        })\r\n      )\r\n    })\r\n  )\r\n};\r\nexport default MeetingLine;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Avatar\";\r\nimport FatText from \"../FatText\";\r\nimport Helmet from \"react-helmet\";\r\nimport Input from \"../Input\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div``;\r\n\r\nconst Box = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  border-radius:0px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\nconst Form = styled(Box)`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  form {\r\n    width: 100%;\r\n    input {\r\n      width: 100%;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\nexport default ({\r\n  email,\r\n  avatar,\r\n  password,\r\n  userName,\r\n  phoneNum,\r\n  birthday,\r\n  introduce,\r\n  passwordEdit,\r\n  userNameEdit,\r\n  phoneNumEdit,\r\n  birthdayEdit,\r\n  introduceEdit,\r\n  onSubmit,\r\n  setAction\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <Header>\r\n        <Avatar />\r\n        <FatText />\r\n      </Header>\r\n      <Form>\r\n        <Helmet>\r\n          <title>프로필 수정 | Originals</title>\r\n        </Helmet>\r\n        <form onSubmit={onSubmit}>\r\n          <Input\r\n            placeholder={\"이메일\"}\r\n            value={email}\r\n            type=\"email\"\r\n            disabled={true}\r\n          />\r\n          <Input placeholder={\"비밀번호\"} {...passwordEdit} type=\"password\" />\r\n          <Input placeholder={\"이름\"} {...userNameEdit} />\r\n          <Input placeholder={\"전화번호\"} {...phoneNumEdit} />\r\n          <Input placeholder={\"생일\"} {...birthdayEdit} />\r\n          <Input placeholder={\"한 줄 소개\"} {...introduceEdit} />\r\n\r\n          <Button text={\"프로필 수정\"} />\r\n          <Button text={\"계정 삭제\"} onClick={() => setAction(\"DELETE\")} />\r\n        </form>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const EDIT_PROFILE = gql`\r\n  mutation editUser(\r\n    $id: String!\r\n    $avatar: String\r\n    $birthday: String\r\n    $phoneNum: String\r\n    $password: String\r\n    $introduce: String\r\n    $action: ACTIONS!\r\n  ) {\r\n    editUser(\r\n      id: $id\r\n      avatar: $avatar\r\n      birthday: $birthday\r\n      phoneNum: $phoneNum\r\n      password: $password\r\n      introduce: $introduce\r\n      action: $action\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nexport const GET_USER = gql`\r\n  query seeProfileById($id: String!) {\r\n    seeProfileById(id: $id) {\r\n      id\r\n      avatar\r\n      email\r\n      userName\r\n      birthday\r\n      phoneNum\r\n      email\r\n      introduce\r\n      password\r\n      classes\r\n    }\r\n  }\r\n`;\r\n","import editProfileContainer from \"./EditProfileContainer\";\r\nexport default editProfileContainer;\r\n","import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport EditProfilePresenter from \"./EditProfilePresenter\";\r\nimport { useMutation, useQuery } from \"react-apollo-hooks\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { EDIT_PROFILE, GET_USER } from \"./EditProfileQueries\";\r\nimport Loader from \"../Loader\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditProfileContainer = ({ id, editProfile, logOut }) => {\r\n  const { data, loading } = useQuery(GET_USER, {\r\n    variables: {\r\n      id: id\r\n    }\r\n  });\r\n  const [action, setAction] = useState(\"EDIT\");\r\n\r\n  const passwordEdit = useInput(\"\");\r\n  const userNameEdit = useInput(\"\");\r\n  const phoneNumEdit = useInput(\"\");\r\n  const birthdayEdit = useInput(\"\");\r\n  const introduceEdit = useInput(\"\");\r\n\r\n  const [editAccountMutation] = useMutation(EDIT_PROFILE, {\r\n    variables: {\r\n      id: id,\r\n      password: passwordEdit.value,\r\n      userName: userNameEdit.value,\r\n      phoneNum: phoneNumEdit.value,\r\n      birthday: birthdayEdit.value,\r\n      introduce: introduceEdit.value,\r\n      action: action\r\n    }\r\n  });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (action === \"EDIT\") {\r\n      if (\r\n        passwordEdit.value !== \"\" &&\r\n        userNameEdit.value !== \"\" &&\r\n        phoneNumEdit.value !== \"\" &&\r\n        birthdayEdit.value !== \"\" &&\r\n        introduceEdit.value !== \"\"\r\n      ) {\r\n        try {\r\n          await editAccountMutation();\r\n          toast.success(\"계정 수정 성공\");\r\n          setTimeout(() => editProfile(\"Profile\"), 3000);\r\n        } catch {\r\n          toast.error(\"계정을 수정할 수 없습니다. 다시 시도해주세요.\");\r\n        }\r\n      } else {\r\n        toast.error(\"빈칸을 남겨두지 마세요.\");\r\n      }\r\n    } else if (action === \"DELETE\") {\r\n      try {\r\n        await editAccountMutation();\r\n        toast.success(\"바이바이~\");\r\n        logOut();\r\n      } catch {\r\n        toast.error(\"계정을 삭제할 수 없습니다. 다시 시도해주세요.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  } else if (!loading && data && data.seeProfileById) {\r\n    const {\r\n      seeProfileById: {\r\n        email,\r\n        avatar,\r\n        password,\r\n        userName,\r\n        phoneNum,\r\n        birthday,\r\n        introduce\r\n      }\r\n    } = data;\r\n\r\n    if (\r\n      passwordEdit.value === \"\" ||\r\n      userNameEdit.value === \"\" ||\r\n      phoneNumEdit.value === \"\" ||\r\n      birthdayEdit.value === \"\" ||\r\n      introduceEdit.value === \"\"\r\n    ) {\r\n      passwordEdit.setValue(password);\r\n      userNameEdit.setValue(userName);\r\n      phoneNumEdit.setValue(phoneNum);\r\n      birthdayEdit.setValue(birthday);\r\n      introduceEdit.setValue(introduce);\r\n    }\r\n    return (\r\n      <EditProfilePresenter\r\n        email={email}\r\n        avatar={avatar}\r\n        passwordEdit={passwordEdit}\r\n        userNameEdit={userNameEdit}\r\n        phoneNumEdit={phoneNumEdit}\r\n        birthdayEdit={birthdayEdit}\r\n        introduceEdit={introduceEdit}\r\n        onSubmit={onSubmit}\r\n        setAction={setAction}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nEditProfileContainer.propTypes = {\r\n  id: propTypes.string.isRequired\r\n};\r\n\r\nexport default EditProfileContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../../Components/Avatar\";\r\nimport FatText from \"../../Components/FatText\";\r\nimport Button from \"../../Components/Button/Button\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport BulletinLine from \"../../Components/BulletinLine\";\r\nimport CommentLine from \"../../Components/CommentLine\";\r\nimport MeetingLine from \"../../Components/MeetingLine\";\r\nimport EditProfile from \"../../Components/EditProfile\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-bottom: 100px;\r\n`;\r\nconst HeaderColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  &:first-child {\r\n    align-self: top;\r\n  }\r\n`;\r\nconst UsernameRow = styled.div`\r\n  display: flex;\r\n  height: 100px;\r\n  justify-content: center;\r\n  align-itmes: center;\r\n`;\r\nconst UserName = styled(FatText)`\r\n  font-size: 20pt;\r\n  text-align: center;\r\n  width: 300px;\r\n  padding: 30px;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  width: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\nconst ProfileButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\nconst ProfileContainer = styled.div`\r\n  width:100%:\r\n  height:200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding:40px;\r\n  padding-left:110px;\r\n`;\r\n\r\nconst ProfileInfo = styled(FatText)`\r\n  height: 30px;\r\n`;\r\n\r\nconst Counts = styled.ul`\r\n  display: flex;\r\n  margin: 15px 0px;\r\n`;\r\n\r\nconst Count = styled.li`\r\n  font-size: 16px;\r\n  margin: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n  width: 800px;\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 60px;\r\n  align-items: center;\r\n  border-top: 0.5px solid ${props => props.theme.lightGray3};\r\n  border-bottom: 0.5px solid ${props => props.theme.lightGray3};\r\n`;\r\nconst Tab = styled.span`\r\n  cursor: pointer;\r\n  width: 250px;\r\n  text-align: center;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  height: 600px;\r\n`;\r\n\r\nexport default ({\r\n  loading,\r\n  data,\r\n  logOut,\r\n  action,\r\n  setAction,\r\n  editAction,\r\n  editProfile\r\n}) => {\r\n  if (loading) {\r\n    return (\r\n      <Wrapper>\r\n        <Loader />\r\n      </Wrapper>\r\n    );\r\n  } else if (!loading && data && data.seeProfile) {\r\n    const {\r\n      seeProfile: {\r\n        id,\r\n        avatar,\r\n        userName,\r\n        birthday,\r\n        phoneNum,\r\n        email,\r\n        classes,\r\n        posts,\r\n        postsCount,\r\n        comments,\r\n        commentsCount,\r\n        reservations,\r\n        reservationsCount,\r\n        likes,\r\n        likesCount,\r\n        participants,\r\n        participantsCount,\r\n        isSelf,\r\n        createdAt\r\n      }\r\n    } = data;\r\n    if (editAction === \"Profile\") {\r\n      return (\r\n        <Wrapper>\r\n          <Helmet>\r\n            <title>{userName} | Originals</title>\r\n          </Helmet>\r\n          <Header>\r\n            <HeaderColumn>\r\n              <Avatar size={\"lg\"} url={avatar} />\r\n            </HeaderColumn>\r\n            <HeaderColumn>\r\n              <UsernameRow>\r\n                <UserName text={userName} />\r\n                {isSelf ? (\r\n                  <ButtonContainer>\r\n                    <ProfileButton onClick={logOut} text={\"로그아웃\"} />\r\n                    <ProfileButton\r\n                      onClick={() => editProfile(\"Edit\")}\r\n                      text={\"계정 수정\"}\r\n                    />\r\n                  </ButtonContainer>\r\n                ) : null}\r\n              </UsernameRow>\r\n\r\n              <ProfileContainer>\r\n                {isSelf ? (\r\n                  <>\r\n                    <ProfileInfo text={\"이메일 : \" + email} />\r\n                    <ProfileInfo text={\"생일 : \" + birthday} />\r\n                    <ProfileInfo text={\"핸드폰번호 : \" + phoneNum} />\r\n                  </>\r\n                ) : null}\r\n\r\n                {classes === 1 ? (\r\n                  <ProfileInfo text={\"신입회원\"} />\r\n                ) : classes === 2 ? (\r\n                  <ProfileInfo text={\"일반회원\"} />\r\n                ) : (\r\n                  <ProfileInfo text={\"정회원\"} />\r\n                )}\r\n              </ProfileContainer>\r\n\r\n              {/* isSelf 일 경우 이메일, 생일 폰번, 등 표시 */}\r\n              {/* 회원구분 표시 */}\r\n              <Counts>\r\n                <Count>\r\n                  <FatText text={String(postsCount)} /> 게시글\r\n                </Count>\r\n                <Count>\r\n                  <FatText text={String(commentsCount)} /> 댓글\r\n                </Count>\r\n                <Count>\r\n                  <FatText text={String(participantsCount)} /> 모임 참가\r\n                </Count>\r\n                {/* <Count>\r\n                <FatText text={String(postsCount)} /> 도서 대여\r\n              </Count> */}\r\n              </Counts>\r\n            </HeaderColumn>\r\n          </Header>\r\n          <MainContainer>\r\n            <TabContainer>\r\n              <Tab onClick={() => setAction(\"bulletin\")}>게시글</Tab>\r\n              <Tab onClick={() => setAction(\"comment\")}>댓글</Tab>\r\n              <Tab onClick={() => setAction(\"meeting\")}>참가한 모임</Tab>\r\n            </TabContainer>\r\n            <ContentContainer>\r\n              {action === \"bulletin\"\r\n                ? posts.map(post => <BulletinLine key={post.id} post={post} />)\r\n                : action === \"comment\"\r\n                ? comments.map(comment => (\r\n                    <CommentLine key={comment.id} comment={comment} />\r\n                  ))\r\n                : participants.map(participant => (\r\n                    <MeetingLine\r\n                      key={participant.id}\r\n                      participant={participant}\r\n                    />\r\n                  ))}\r\n            </ContentContainer>\r\n          </MainContainer>\r\n        </Wrapper>\r\n      );\r\n    } else if (editAction === \"Edit\") {\r\n      return <EditProfile id={id} editProfile={editProfile} logOut={logOut} />;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const GET_USER = gql`\r\n  query seeProfile($email: String!) {\r\n    seeProfile(email: $email) {\r\n      id\r\n      avatar\r\n      email\r\n      userName\r\n      birthday\r\n      phoneNum\r\n      email\r\n      introduce\r\n      password\r\n      classes\r\n      posts {\r\n        id\r\n        title\r\n        classifyNum\r\n        viewsCount\r\n        likesCount\r\n      }\r\n      postsCount\r\n      comments {\r\n        id\r\n        text\r\n        likesCount\r\n      }\r\n      commentsCount\r\n      reservations {\r\n        book {\r\n          id\r\n          photo {\r\n            id\r\n            url\r\n          }\r\n          author\r\n          title\r\n        }\r\n        startDate\r\n        endDate\r\n        createdAt\r\n      }\r\n      reservationsCount\r\n      likes {\r\n        id\r\n        post {\r\n          id\r\n          title\r\n          author {\r\n            id\r\n            userName\r\n          }\r\n          likesCount\r\n          viewsCount\r\n        }\r\n      }\r\n      likesCount\r\n      participants {\r\n        id\r\n        meeting {\r\n          id\r\n          title\r\n          meetingTime\r\n          meetingPlace\r\n          meetingPrice\r\n          meetingHeadCounts\r\n          participants {\r\n            id\r\n            user {\r\n              id\r\n              avatar\r\n              userName\r\n            }\r\n          }\r\n          participantsCount\r\n        }\r\n      }\r\n      participantsCount\r\n      isSelf\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOG_OUT = gql`\r\n  mutation logUserOut {\r\n    logUserOut @client\r\n  }\r\n`;\r\n","import ProfileContainer from \"./ProfileContainer\";\r\n\r\nexport default ProfileContainer;\r\n","import ProfilePresenter from \"./ProfilePresenter\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useQuery, useMutation } from \"react-apollo-hooks\";\r\nimport { GET_USER, LOG_OUT } from \"./ProfileQueries\";\r\n\r\nexport default withRouter(\r\n  ({\r\n    match: {\r\n      params: { email }\r\n    }\r\n  }) => {\r\n    const { data, loading } = useQuery(GET_USER, {\r\n      variables: { email }\r\n    });\r\n    const [logUserOut] = useMutation(LOG_OUT);\r\n    const [action, setAction] = useState(\"bulletin\");\r\n    const [editAction, setEditAction] = useState(\"Profile\");\r\n\r\n    const editProfile = async () => {\r\n      if (editAction === \"Profile\") {\r\n        await setEditAction(\"Edit\");\r\n      } else if (editAction === \"Edit\") {\r\n        await setEditAction(\"Profile\");\r\n      }\r\n    };\r\n    return (\r\n      <ProfilePresenter\r\n        loading={loading}\r\n        logOut={logUserOut}\r\n        data={data}\r\n        action={action}\r\n        setAction={setAction}\r\n        editAction={editAction}\r\n        editProfile={editProfile}\r\n      />\r\n    );\r\n  }\r\n);\r\n","export default () => \"Book\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CheckboxToggle from \"../semi-component/toggle\";\r\n\r\nimport Button from \"../Button/Button\";\r\nimport { X } from \"../Icons\";\r\nimport Input from \"../Input\";\r\nconst AllContainer = styled.div`\r\n  width: 700px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n`;\r\nconst XButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  text-align: right;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst XButton = styled.button`\r\n  width: 40px;\r\n  border: 0;\r\n  background-color: white;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 100%;\r\n  padding: 10px;\r\n  &:(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nconst Content = styled(Input)`\r\n  width: 100%;\r\n`;\r\nconst SpinnerContainer = styled.div`\r\n  padding: 10px;\r\n  width: 600px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 11pt;\r\n  align-items: center;\r\n  &: {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\nconst CheckboxToggleM = styled(CheckboxToggle)`\r\n  margin-left: 10px;\r\n`;\r\nconst SubmitButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default ({\r\n  meetingId,\r\n  title,\r\n  meetingTime,\r\n  meetingPlace,\r\n  meetingPrice,\r\n  deadline,\r\n  meetingHeadCounts,\r\n  setEdit,\r\n  mainCheck,\r\n  clickCheck,\r\n  onSubmit,\r\n  deleteMeeting\r\n}) => {\r\n  console.log(title);\r\n  if (meetingId === \"write\") {\r\n    return (\r\n      <AllContainer>\r\n        <XButtonContainer>\r\n          <XButton onClick={() => setEdit(\"read\")}>\r\n            <X />\r\n          </XButton>\r\n        </XButtonContainer>\r\n\r\n        <Container>\r\n          <form onSubmit={onSubmit}>\r\n            <ContentContainer>\r\n              <Content placeholder={\"제목\"} {...title} />\r\n            </ContentContainer>\r\n            <SpinnerContainer>\r\n              <CheckboxToggleM\r\n                checked={mainCheck}\r\n                onClick={() => clickCheck()}\r\n              />{\" \"}\r\n              메인\r\n            </SpinnerContainer>\r\n\r\n            <ContentContainer>\r\n              <Content placeholder={\"모임 시간\"} {...meetingTime} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"모임 장소\"} {...meetingPlace} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"모임 비용\"} {...meetingPrice} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"마감 시간\"} {...deadline} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"제한 인원\"} {...meetingHeadCounts} />\r\n            </ContentContainer>\r\n\r\n            <SubmitButton text={\"모임 만들기\"} />\r\n          </form>\r\n        </Container>\r\n      </AllContainer>\r\n    );\r\n  } else {\r\n    return (\r\n      <AllContainer>\r\n        <XButtonContainer>\r\n          <XButton onClick={() => setEdit(\"read\")}>\r\n            <X />\r\n          </XButton>\r\n        </XButtonContainer>\r\n        <Container>\r\n          <form onSubmit={onSubmit}>\r\n            <ContentContainer>\r\n              <Content placeholder={\"제목\"} {...title} />\r\n            </ContentContainer>\r\n            <SpinnerContainer>\r\n              <CheckboxToggleM\r\n                checked={mainCheck}\r\n                onClick={() => clickCheck()}\r\n              />{\" \"}\r\n              메인\r\n            </SpinnerContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"모임 시간\"} {...meetingTime} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"모임 장소\"} {...meetingPlace} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"모임 비용\"} {...meetingPrice} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"마감 시간\"} {...deadline} />\r\n            </ContentContainer>\r\n            <ContentContainer>\r\n              <Content placeholder={\"제한 인원\"} {...meetingHeadCounts} />\r\n            </ContentContainer>\r\n\r\n            <ButtonContainer>\r\n              <SubmitButton text={\"수정하기\"} />\r\n            </ButtonContainer>\r\n          </form>\r\n          <ButtonContainer>\r\n            <Button text={\"글 삭제\"} onClick={() => deleteMeeting()} />\r\n          </ButtonContainer>\r\n        </Container>\r\n      </AllContainer>\r\n    );\r\n  }\r\n};\r\n","import { gql } from \"apollo-boost\";\r\n\r\nexport const SEE_MEETING = gql`\r\n  query seeMeeting($id: String!) {\r\n    seeMeeting(id: $id) {\r\n      id\r\n      title\r\n      main\r\n      user {\r\n        id\r\n        avatar\r\n        userName\r\n        classes\r\n        email\r\n      }\r\n      meetingTime\r\n      meetingPlace\r\n      meetingPrice\r\n      deadline\r\n      meetingHeadCounts\r\n      participants {\r\n        id\r\n        user {\r\n          id\r\n          userName\r\n          avatar\r\n          classes\r\n          email\r\n        }\r\n      }\r\n      isParticipated\r\n      participantsCount\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EDIT_MEETING = gql`\r\n  mutation editMeeting(\r\n    $id: String!\r\n    $title: String!\r\n    $main: Boolean!\r\n    $meetingTime: String!\r\n    $meetingPlace: String!\r\n    $meetingPrice: String!\r\n    $deadline: String!\r\n    $meetingHeadCounts: Int!\r\n    $action: ACTIONS!\r\n  ) {\r\n    editMeeting(\r\n      id: $id\r\n      title: $title\r\n      main: $main\r\n      meetingTime: $meetingTime\r\n      meetingPlace: $meetingPlace\r\n      meetingPrice: $meetingPrice\r\n      deadline: $deadline\r\n      meetingHeadCounts: $meetingHeadCounts\r\n      action: $action\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const WRITE_MEETING = gql`\r\n  mutation uploadMeeting(\r\n    $title: String!\r\n    $main: Boolean!\r\n    $meetingTime: String!\r\n    $meetingPlace: String!\r\n    $meetingPrice: String!\r\n    $deadline: String!\r\n    $meetingHeadCounts: Int!\r\n  ) {\r\n    uploadMeeting(\r\n      title: $title\r\n      main: $main\r\n      meetingTime: $meetingTime\r\n      meetingPlace: $meetingPlace\r\n      meetingPrice: $meetingPrice\r\n      deadline: $deadline\r\n      meetingHeadCounts: $meetingHeadCounts\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import EditMeetingContainer from \"./EditMeetingContainer\";\r\nexport default EditMeetingContainer;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport EditMeetingPresenter from \"./EditMeetingPresenter\";\r\nimport { useQuery, useMutation } from \"react-apollo-hooks\";\r\nimport { SEE_MEETING, WRITE_MEETING, EDIT_MEETING } from \"./EditMeetingQueries\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport Loader from \"../Loader\";\r\nimport { toast } from \"react-toastify\";\r\nconst EditMeetingContainer = ({ meetingId, setEdit, refetch }) => {\r\n  const { data, loading } = useQuery(SEE_MEETING, {\r\n    variables: {\r\n      id: meetingId\r\n    }\r\n  });\r\n  const titleEdit = useInput(\"\");\r\n  const meetingTimeEdit = useInput(\"\");\r\n  const meetingPlaceEdit = useInput(\"\");\r\n  const meetingPriceEdit = useInput(\"\");\r\n  const deadlineEdit = useInput(\"\");\r\n  const meetingHeadCountsEdit = useInput(\"\");\r\n  const [mainCheck, setMainCheck] = useState(false);\r\n\r\n  const clickCheck = () => {\r\n    if (!mainCheck) {\r\n      setMainCheck(true);\r\n    } else if (mainCheck) {\r\n      setMainCheck(false);\r\n    }\r\n  };\r\n  const [writeMutation] = useMutation(WRITE_MEETING, {\r\n    variables: {\r\n      title: titleEdit.value,\r\n      main: mainCheck,\r\n      meetingTime: meetingTimeEdit.value,\r\n      meetingPlace: meetingPlaceEdit.value,\r\n      meetingPrice: meetingPriceEdit.value,\r\n      deadline: deadlineEdit.value,\r\n      meetingHeadCounts: parseInt(meetingHeadCountsEdit.value)\r\n    }\r\n  });\r\n\r\n  const [editMutation] = useMutation(EDIT_MEETING, {\r\n    variables: {\r\n      id: meetingId,\r\n      title: titleEdit.value,\r\n      main: mainCheck,\r\n      meetingTime: meetingTimeEdit.value,\r\n      meetingPlace: meetingPlaceEdit.value,\r\n      meetingPrice: meetingPriceEdit.value,\r\n      deadline: deadlineEdit.value,\r\n      meetingHeadCounts: parseInt(meetingHeadCountsEdit.value),\r\n      action: \"EDIT\"\r\n    }\r\n  });\r\n  const [deleteMutation] = useMutation(EDIT_MEETING, {\r\n    variables: {\r\n      id: meetingId,\r\n      title: titleEdit.value,\r\n      main: mainCheck,\r\n      meetingTime: meetingTimeEdit.value,\r\n      meetingPlace: meetingPlaceEdit.value,\r\n      meetingPrice: meetingPriceEdit.value,\r\n      deadline: deadlineEdit.value,\r\n      meetingHeadCounts: parseInt(meetingHeadCountsEdit.value),\r\n      action: \"DELETE\"\r\n    }\r\n  });\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (meetingId === \"write\") {\r\n      if (\r\n        titleEdit === \"\" ||\r\n        meetingTimeEdit === \"\" ||\r\n        meetingPlaceEdit === \"\" ||\r\n        meetingPriceEdit === \"\" ||\r\n        deadlineEdit === \"\" ||\r\n        meetingHeadCountsEdit === \"\"\r\n      ) {\r\n        toast.error(\"빈칸을 채워주세요.\");\r\n      } else {\r\n        try {\r\n          const {\r\n            data: { uploadMeeting }\r\n          } = await writeMutation();\r\n          if (uploadMeeting) {\r\n            toast.success(\"모임 등록에 성공했습니다.\");\r\n            await refetch();\r\n\r\n            setTimeout(() => setEdit(\"read\"), 1000);\r\n          } else if (!uploadMeeting) {\r\n            toast.error(\"모임을 등록할 수 없습니다.\");\r\n          }\r\n        } catch {\r\n          toast.error(\"모임을 등록할 수 없습니다.\");\r\n        }\r\n      }\r\n    } else {\r\n      if (\r\n        titleEdit === \"\" ||\r\n        meetingTimeEdit === \"\" ||\r\n        meetingPlaceEdit === \"\" ||\r\n        meetingPriceEdit === \"\" ||\r\n        deadlineEdit === \"\" ||\r\n        meetingHeadCountsEdit === \"\"\r\n      ) {\r\n        toast.error(\"빈칸을 채워주세요.\");\r\n      } else {\r\n        try {\r\n          const {\r\n            data: { editMeeting }\r\n          } = await editMutation();\r\n          if (editMeeting) {\r\n            toast.success(\"모임 수정에 성공했습니다.\");\r\n            await refetch();\r\n\r\n            setTimeout(() => setEdit(\"read\"), 1000);\r\n          } else if (!editMeeting) {\r\n            toast.error(\"모임을 수정할 수 없습니다.\");\r\n          }\r\n        } catch {\r\n          toast.error(\"모임을 수정할 수 없습니다.\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const deleteMeeting = async () => {\r\n    deleteMutation();\r\n    await refetch();\r\n    setTimeout(() => setEdit(\"read\"), 1000);\r\n  };\r\n\r\n  if (meetingId === \"write\") {\r\n    return (\r\n      <EditMeetingPresenter\r\n        meetingId={meetingId}\r\n        title={titleEdit}\r\n        main={mainCheck}\r\n        meetingTime={meetingTimeEdit}\r\n        meetingPlace={meetingPlaceEdit}\r\n        meetingPrice={meetingPriceEdit}\r\n        deadline={deadlineEdit}\r\n        meetingHeadCounts={meetingHeadCountsEdit}\r\n        clickCheck={clickCheck}\r\n        mainCheck={mainCheck}\r\n        refetch={refetch}\r\n        setEdit={setEdit}\r\n        onSubmit={onSubmit}\r\n      />\r\n    );\r\n  } else {\r\n    if (loading) {\r\n      return <Loader />;\r\n    } else if (!loading && data && data.seeMeeting) {\r\n      const {\r\n        seeMeeting: {\r\n          title,\r\n          main,\r\n          meetingTime,\r\n          meetingPlace,\r\n          meetingPrice,\r\n          deadline,\r\n          meetingHeadCounts\r\n        }\r\n      } = data;\r\n      if (titleEdit.value === \"\") {\r\n        titleEdit.setValue(title);\r\n      }\r\n      if (meetingTimeEdit.value === \"\") {\r\n        meetingTimeEdit.setValue(meetingTime);\r\n      }\r\n      if (meetingPlaceEdit.value === \"\") {\r\n        meetingPlaceEdit.setValue(meetingPlace);\r\n      }\r\n      if (meetingPriceEdit.value === \"\") {\r\n        meetingPriceEdit.setValue(meetingPrice);\r\n      }\r\n      if (deadlineEdit.value === \"\") {\r\n        deadlineEdit.setValue(deadline);\r\n      }\r\n      if (meetingHeadCountsEdit.value === \"\") {\r\n        meetingHeadCountsEdit.setValue(meetingHeadCounts);\r\n      }\r\n\r\n      if (main === true && mainCheck === false) {\r\n        setMainCheck(true);\r\n      }\r\n      console.log(meetingId);\r\n      return (\r\n        <EditMeetingPresenter\r\n          meetingId={meetingId}\r\n          title={titleEdit}\r\n          main={mainCheck}\r\n          meetingTime={meetingTimeEdit}\r\n          meetingPlace={meetingPlaceEdit}\r\n          meetingPrice={meetingPriceEdit}\r\n          deadline={deadlineEdit}\r\n          meetingHeadCounts={meetingHeadCountsEdit}\r\n          clickCheck={clickCheck}\r\n          mainCheck={mainCheck}\r\n          refetch={refetch}\r\n          setEdit={setEdit}\r\n          onSubmit={onSubmit}\r\n          deleteMeeting={deleteMeeting}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nEditMeetingContainer.propTypes = {\r\n  meetingId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default EditMeetingContainer;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../Components/Loader\";\r\nimport Meeting from \"../Components/Meeting\";\r\nimport Button from \"../Components/Button/Button\";\r\nimport EditMeeting from \"../Components/EditMeeting\";\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding-right: 100px;\r\n  width: 100%;\r\n`;\r\nconst SHOW_MEETING_LIST = gql`\r\n  {\r\n    showMeetingList {\r\n      id\r\n      title\r\n      main\r\n      user {\r\n        id\r\n        avatar\r\n        userName\r\n        classes\r\n        email\r\n      }\r\n      meetingTime\r\n      meetingPlace\r\n      meetingPrice\r\n      deadline\r\n      meetingHeadCounts\r\n      participants {\r\n        id\r\n        user {\r\n          id\r\n          userName\r\n          avatar\r\n          classes\r\n          email\r\n        }\r\n      }\r\n      isParticipated\r\n      participantsCount\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n`;\r\nconst ButtonDownContainer = styled.span`\r\n  width: 150px;\r\n  height: 50px;\r\n  margin: 5px;\r\n`;\r\nexport default withRouter(\r\n  ({\r\n    match: {\r\n      params: { id }\r\n    }\r\n  }) => {\r\n    const { refetch, data, loading } = useQuery(SHOW_MEETING_LIST);\r\n    const [edit, setEdit] = useState(\"read\");\r\n    const [editId, setEditId] = useState(\"\");\r\n\r\n    const setEditing = async editId2 => {\r\n      await setEditId(editId2);\r\n      await setEdit(\"edit\");\r\n    };\r\n    return (\r\n      <Wrapper>\r\n        <Helmet>\r\n          <title>모임 | Originals</title>\r\n        </Helmet>\r\n        {edit === \"read\" && (\r\n          <ButtonContainer>\r\n            <ButtonDownContainer>\r\n              <Button text={\"모임 만들기\"} onClick={() => setEdit(\"write\")} />\r\n            </ButtonDownContainer>\r\n          </ButtonContainer>\r\n        )}\r\n\r\n        {edit === \"read\" && loading && <Loader />}\r\n        {edit === \"read\" &&\r\n          !loading &&\r\n          data &&\r\n          data.showMeetingList &&\r\n          data.showMeetingList.map(meeting => (\r\n            <Meeting\r\n              key={meeting.id}\r\n              id={meeting.id}\r\n              title={meeting.title}\r\n              main={meeting.main}\r\n              user={meeting.user}\r\n              meetingTime={meeting.meetingTime}\r\n              meetingPlace={meeting.meetingPlace}\r\n              meetingPrice={meeting.meetingPrice}\r\n              deadline={meeting.deadline}\r\n              meetingHeadCounts={meeting.meetingHeadCounts}\r\n              participants={meeting.participants}\r\n              isParticipated={meeting.isParticipated}\r\n              participantsCount={meeting.participantsCount}\r\n              createdAt={meeting.createdAt}\r\n              userId={id}\r\n              setEditing={setEditing}\r\n            />\r\n          ))}\r\n\r\n        {edit === \"write\" ? (\r\n          <EditMeeting\r\n            meetingId={\"write\"}\r\n            refetch={refetch}\r\n            setEdit={setEdit}\r\n          />\r\n        ) : null}\r\n        {edit === \"edit\" ? (\r\n          <EditMeeting meetingId={editId} refetch={refetch} setEdit={setEdit} />\r\n        ) : null}\r\n      </Wrapper>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Profile, Bulletin, Book, Meeting } from \"./Icons\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { ME } from \"../SharedQueries\";\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  background-color: white;\r\n  border: 0;\r\n  border-bottom: ${props => props.theme.boxBorder};\r\n  border-radius: 0px;\r\n  margin-bottom: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 25px 0;\r\n  z-index: 2;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: ${props => props.theme.maxWidth};\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst HeaderColumn = styled.div`\r\n  width: 50%;\r\n  text-align: center;\r\n  &:first-child {\r\n    text-align: left;\r\n    margin-right: auto;\r\n  }\r\n  &:last-child {\r\n    margin-left: auto;\r\n    text-align: right;\r\n  }\r\n`;\r\nconst HeaderLink = styled(Link)`\r\n  &:not(:last-child) {\r\n    margin-right: 30px;\r\n  }\r\n`;\r\n\r\nexport default withRouter(() => {\r\n  const { data, loading } = useQuery(ME);\r\n\r\n  return (\r\n    <Header>\r\n      <HeaderWrapper>\r\n        <HeaderColumn>\r\n          <Link to=\"/\">Originals</Link>\r\n        </HeaderColumn>\r\n        <HeaderColumn>\r\n          {!loading && data && data.me ? (\r\n            <HeaderLink to={`/Bulletin/${data.me.id}`}>게시판</HeaderLink>\r\n          ) : (\r\n            <HeaderLink to={`/Bulletin/`}>게시판</HeaderLink>\r\n          )}\r\n          {!loading && data && data.me ? (\r\n            <HeaderLink to={`/Meeting/${data.me.id}`}>모임</HeaderLink>\r\n          ) : (\r\n            <HeaderLink to={`/Meeting/`}>모임</HeaderLink>\r\n          )}\r\n          {!loading && data && data.me ? (\r\n            <HeaderLink to={`/Profile/${data.me.email}`}>프로필</HeaderLink>\r\n          ) : (\r\n            <HeaderLink to=\"/Profile\">프로필</HeaderLink>\r\n          )}\r\n        </HeaderColumn>\r\n      </HeaderWrapper>\r\n    </Header>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Auth from \"../Routes/Auth\";\r\nimport Main from \"../Routes/Main\";\r\nimport Bulletin from \"../Routes/Bulletin\";\r\nimport Profile from \"../Routes/Profile\";\r\nimport Book from \"../Routes/Book\";\r\nimport Meeting from \"../Routes/Meeting\";\r\nimport Header from \"../Components/Header\";\r\n\r\nconst LoggedInRoutes = () => (\r\n  <>\r\n    <Header />\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Main} />\r\n      <Route path=\"/Bulletin/:id\" component={Bulletin} />\r\n      <Route path=\"/Book\" component={Book} />\r\n      <Route path=\"/Meeting/:id\" component={Meeting} />\r\n      <Route path=\"/Profile/:email\" component={Profile} />\r\n\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  </>\r\n);\r\n\r\nconst LoggedOutRoutes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Auth} />\r\n    <Redirect from=\"*\" to=\"/\" />\r\n  </Switch>\r\n);\r\n\r\nconst AppRouter = ({ isLoggedIn }) =>\r\n  isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />;\r\n\r\nAppRouter.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport { gql } from \"apollo-boost\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport Theme from \"../Styles/Theme\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport AppRouter from \"./Router\";\n\nconst QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\nconst Wrapper = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  width: 100%;\n  height: auto;\n`;\n\nexport default () => {\n  const {\n    data: { isLoggedIn }\n  } = useQuery(QUERY);\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <>\n        <GlobalStyles />\n        <Router>\n          <Wrapper>\n            <AppRouter isLoggedIn={isLoggedIn} />\n          </Wrapper>\n        </Router>\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n      </>\n    </ThemeProvider>\n  );\n};\n","export const defaults ={\r\n    isLoggedIn : Boolean(localStorage.getItem(\"token\")) || false\r\n}\r\n\r\nexport const resolvers ={\r\n    Mutation:{\r\n        logUserIn: (_, {token}, {cache}) =>{\r\n            localStorage.setItem(\"token\", token);\r\n            cache.writeData(\r\n                {data:{\r\n                    isLoggedIn: true\r\n                }\r\n            });\r\n            return null;\r\n        },\r\n        logUserOut: (_, __,{cache}) =>{\r\n            localStorage.removeItem(\"token\");\r\n            window.location = \"/\";\r\n            return null;\r\n        }\r\n    }\r\n}","import ApolloClient from \"apollo-boost\";\r\nimport { defaults, resolvers } from \"./LocalState\";\r\nexport default new ApolloClient({\r\n  uri:\r\n    process.env.NODE_ENV === \"development\"\r\n      ? \"http://localhost:4000\"\r\n      : \"https://clone-instagram-kyungyup.herokuapp.com\",\r\n\r\n  clientState: {\r\n    defaults,\r\n    resolvers\r\n  },\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n  }\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport Client from \"./Apollo/Client\";\n\nReactDOM.render(\n  <ApolloProvider client={Client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}